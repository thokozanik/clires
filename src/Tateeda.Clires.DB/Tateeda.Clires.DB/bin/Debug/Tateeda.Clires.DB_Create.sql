/*
Deployment script for Tateeda.Clires.DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Tateeda.Clires.DB"
:setvar DefaultFilePrefix "Tateeda.Clires.DB"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK ON,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET CHANGE_TRACKING = ON(AUTO_CLEANUP = ON, CHANGE_RETENTION = 2 DAYS) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [Library]...';


GO
CREATE SCHEMA [Library]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [dbo].[CodeType]...';


GO
CREATE TABLE [dbo].[CodeType] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (64)  NOT NULL,
    [Description] NVARCHAR (500) NULL,
    [SortOrder]   INT            NOT NULL,
    [CreatedOn]   DATETIME       NULL,
    [UpdatedOn]   DATETIME       NULL,
    [CreatedBy]   NVARCHAR (100) NULL,
    [UpdatedBy]   NVARCHAR (100) NULL,
    [IsActive]    BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90),
    UNIQUE NONCLUSTERED ([Name] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[CodeType].[IX_CodeType_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_CodeType_Id]
    ON [dbo].[CodeType]([Id] ASC, [Name] ASC);


GO
PRINT N'Creating [dbo].[CTGovSubmission]...';


GO
CREATE TABLE [dbo].[CTGovSubmission] (
    [Id]            INT            IDENTITY (1, 1) NOT NULL,
    [Title]         NVARCHAR (250) NOT NULL,
    [SubmissionXML] XML            NULL,
    [Description]   NVARCHAR (500) NULL,
    [SortOrder]     INT            NOT NULL,
    [CreatedOn]     DATETIME       NULL,
    [UpdatedOn]     DATETIME       NULL,
    [CreatedBy]     NVARCHAR (100) NULL,
    [UpdatedBy]     NVARCHAR (100) NULL,
    [IsActive]      BIT            NOT NULL,
    CONSTRAINT [PK_CTGovSubmission] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DrugCategory]...';


GO
CREATE TABLE [dbo].[DrugCategory] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (64)  NOT NULL,
    [Code]        NVARCHAR (32)  NULL,
    [Directions]  NVARCHAR (500) NULL,
    [Description] NVARCHAR (500) NULL,
    [SortOrder]   INT            NOT NULL,
    [Status]      INT            NOT NULL,
    [CreatedOn]   DATETIME       NOT NULL,
    [UpdatedOn]   DATETIME       NULL,
    [CreatedBy]   NVARCHAR (100) NOT NULL,
    [UpdatedBy]   NVARCHAR (100) NULL,
    [IsActive]    BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90),
    UNIQUE NONCLUSTERED ([Name] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[Arm]...';


GO
CREATE TABLE [dbo].[Arm] (
    [Id]          INT             IDENTITY (1, 1) NOT NULL,
    [StudyId]     INT             NOT NULL,
    [Code]        NVARCHAR (50)   NULL,
    [Name]        NVARCHAR (50)   NOT NULL,
    [Description] NVARCHAR (1000) NULL,
    [CreatedOn]   DATETIME        NOT NULL,
    [UpdatedOn]   DATETIME        NULL,
    [CreatedBy]   NVARCHAR (100)  NOT NULL,
    [UpdatedBy]   NVARCHAR (100)  NULL,
    [IsActive]    BIT             NOT NULL,
    CONSTRAINT [PK_Arm] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[Form]...';


GO
CREATE TABLE [dbo].[Form] (
    [Id]                 INT             IDENTITY (1, 1) NOT NULL,
    [StudyId]            INT             NOT NULL,
    [Name]               NVARCHAR (64)   NOT NULL,
    [Code]               NVARCHAR (32)   NULL,
    [FormTypeId]         INT             NOT NULL,
    [Title]              NVARCHAR (500)  NULL,
    [Directions]         NVARCHAR (1000) NULL,
    [Header]             NVARCHAR (1000) NULL,
    [Trailer]            NVARCHAR (1000) NULL,
    [IsFilledBySubject]  BIT             NOT NULL,
    [ShowTotalScore]     BIT             NOT NULL,
    [LayoutTypeId]       INT             NOT NULL,
    [IsDoubleChecked]    BIT             NULL,
    [Description]        NVARCHAR (500)  NULL,
    [SortOrder]          INT             NOT NULL,
    [Status]             INT             NOT NULL,
    [CreatedOn]          DATETIME        NOT NULL,
    [UpdatedOn]          DATETIME        NULL,
    [CreatedBy]          NVARCHAR (100)  NOT NULL,
    [UpdatedBy]          NVARCHAR (100)  NULL,
    [IsActive]           BIT             NOT NULL,
    [NotifyOnChange]     BIT             NOT NULL,
    [NotifyOnCompletion] BIT             NOT NULL,
    CONSTRAINT [PK_Form] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [UX_Form_Name] UNIQUE NONCLUSTERED ([Name] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[Form].[IX_Form_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_Form_Id]
    ON [dbo].[Form]([Id] ASC, [Name] ASC, [FormTypeId] ASC);


GO
PRINT N'Creating [dbo].[FormAnswer]...';


GO
CREATE TABLE [dbo].[FormAnswer] (
    [Id]                INT            IDENTITY (1, 1) NOT NULL,
    [AppointmentFormId] INT            NOT NULL,
    [AnswerId]          INT            NOT NULL,
    [QuestionId]        INT            NOT NULL,
    [FreeTextAnswer]    NVARCHAR (MAX) NULL,
    [Notes]             NVARCHAR (MAX) NULL,
    [CreatedOn]         DATETIME       NOT NULL,
    [UpdatedOn]         DATETIME       NULL,
    [CreatedBy]         NVARCHAR (100) NOT NULL,
    [UpdatedBy]         NVARCHAR (100) NULL,
    CONSTRAINT [PK_FormAnswer] PRIMARY KEY CLUSTERED ([AppointmentFormId] ASC, [AnswerId] ASC, [QuestionId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[FormAnswer].[IX_FormAnswer_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_FormAnswer_Id]
    ON [dbo].[FormAnswer]([Id] ASC, [AppointmentFormId] ASC, [AnswerId] ASC, [QuestionId] ASC);


GO
PRINT N'Creating [dbo].[RecreationalDrugOrSubstance]...';


GO
CREATE TABLE [dbo].[RecreationalDrugOrSubstance] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (100) NOT NULL,
    [SubjectId]      INT            NOT NULL,
    [Dose]           NVARCHAR (50)  NULL,
    [Unit]           NVARCHAR (20)  NULL,
    [Frequency]      INT            NULL,
    [FrequencyUnit]  NVARCHAR (20)  NULL,
    [TypeName]       NVARCHAR (50)  NULL,
    [UseStartDate]   DATE           NULL,
    [UseEndDate]     DATE           NULL,
    [AppointementId] INT            NULL,
    [Comments]       VARCHAR (500)  NULL,
    [Description]    NVARCHAR (500) NULL,
    [SortOrder]      INT            NOT NULL,
    [Status]         INT            NOT NULL,
    [CreatedOn]      DATETIME       NOT NULL,
    [UpdatedOn]      DATETIME       NULL,
    [CreatedBy]      NVARCHAR (100) NOT NULL,
    [UpdatedBy]      NVARCHAR (100) NULL,
    [IsActive]       BIT            NOT NULL,
    CONSTRAINT [PK_RecreationalDrugOrSubstance] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[AppointmentForm]...';


GO
CREATE TABLE [dbo].[AppointmentForm] (
    [Id]               INT            IDENTITY (1, 1) NOT NULL,
    [FormId]           INT            NOT NULL,
    [AppointmentId]    INT            NOT NULL,
    [FormStatusTypeId] INT            NOT NULL,
    [Notes]            NVARCHAR (MAX) NULL,
    [Comments]         NVARCHAR (MAX) NULL,
    [TotalScore]       INT            NOT NULL,
    [Status]           INT            NOT NULL,
    [UpdatedOn]        DATETIME       NULL,
    [SortOrder]        INT            NOT NULL,
    [CreatedOn]        DATETIME       NULL,
    [CreatedBy]        NVARCHAR (100) NULL,
    [UpdatedBy]        NVARCHAR (100) NULL,
    [IsActive]         BIT            NOT NULL,
    CONSTRAINT [PK_Score] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[AppointmentForm].[IX_AppointmentForm_ID]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppointmentForm_ID]
    ON [dbo].[AppointmentForm]([Id] ASC, [FormId] ASC, [AppointmentId] ASC);


GO
PRINT N'Creating [dbo].[SchemaVersion]...';


GO
CREATE TABLE [dbo].[SchemaVersion] (
    [DbVersion] NVARCHAR (100) NULL,
    [CreatedOn] DATETIME       NOT NULL,
    [UpdatedOn] DATETIME       NULL
);


GO
PRINT N'Creating [dbo].[Settings]...';


GO
CREATE TABLE [dbo].[Settings] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (50)  NOT NULL,
    [Value]       NVARCHAR (50)  NOT NULL,
    [Description] NVARCHAR (500) NULL,
    [SortOrder]   INT            NOT NULL,
    [Status]      INT            NOT NULL,
    [CreatedOn]   DATETIME       NOT NULL,
    [UpdatedOn]   DATETIME       NULL,
    [CreatedBy]   NVARCHAR (100) NOT NULL,
    [UpdatedBy]   NVARCHAR (100) NULL,
    [IsActive]    BIT            NOT NULL,
    CONSTRAINT [PK_Settings] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Settings].[IX_Settings_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_Settings_Id]
    ON [dbo].[Settings]([Id] ASC);


GO
PRINT N'Creating [dbo].[Site]...';


GO
CREATE TABLE [dbo].[Site] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (100) NOT NULL,
    [Code]       NVARCHAR (32)  NULL,
    [TimeZoneId] INT            NOT NULL,
    [IsPrimary]  BIT            NOT NULL,
    [Directions] NVARCHAR (500) NULL,
    [SortOrder]  INT            NOT NULL,
    [Status]     INT            NOT NULL,
    [CreatedOn]  DATETIME       NOT NULL,
    [UpdatedOn]  DATETIME       NULL,
    [CreatedBy]  NVARCHAR (100) NOT NULL,
    [UpdatedBy]  NVARCHAR (100) NULL,
    [IsActive]   BIT            NOT NULL,
    CONSTRAINT [PK_Site] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [UX_Site_Name] UNIQUE NONCLUSTERED ([Name] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[SubjectDrug]...';


GO
CREATE TABLE [dbo].[SubjectDrug] (
    [Id]                 INT             IDENTITY (1, 1) NOT NULL,
    [SubjectId]          INT             NOT NULL,
    [DrugId]             INT             NOT NULL,
    [AppointmentId]      INT             NOT NULL,
    [StartDate]          DATETIME        NULL,
    [EndDate]            DATETIME        NULL,
    [MultipleTrialsId]   INT             NULL,
    [DurationUsed]       INT             NULL,
    [ReasonStoppedId]    INT             NOT NULL,
    [ReasonTypeId]       INT             NOT NULL,
    [TreatmentInducedId] INT             NOT NULL,
    [DosageFrequencyId]  INT             NOT NULL,
    [IsCurrent]          BIT             NOT NULL,
    [IsChanged]          BIT             NOT NULL,
    [IsStopped]          BIT             NOT NULL,
    [IsBeforeStudy]      BIT             NOT NULL,
    [Dosage]             NVARCHAR (200)  NULL,
    [DosageType]         NVARCHAR (200)  NULL,
    [Notes]              NVARCHAR (1000) NULL,
    [MdNotes]            NVARCHAR (MAX)  NULL,
    [Comments]           NVARCHAR (MAX)  NULL,
    [Directions]         NVARCHAR (500)  NULL,
    [SortOrder]          INT             NOT NULL,
    [Status]             INT             NOT NULL,
    [CreatedOn]          DATETIME        NOT NULL,
    [UpdatedOn]          DATETIME        NULL,
    [CreatedBy]          NVARCHAR (100)  NOT NULL,
    [UpdatedBy]          NVARCHAR (100)  NULL,
    [IsActive]           BIT             NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[UsersInRoles]...';


GO
CREATE TABLE [dbo].[UsersInRoles] (
    [UserId] UNIQUEIDENTIFIER NOT NULL,
    [RoleId] UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [RoleId] ASC)
);


GO
PRINT N'Creating [dbo].[VisitStep]...';


GO
CREATE TABLE [dbo].[VisitStep] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (100) NOT NULL,
    [ArmId]      INT            NOT NULL,
    [Directions] NVARCHAR (500) NULL,
    [SortOrder]  INT            NOT NULL,
    [Status]     INT            NOT NULL,
    [CreatedOn]  DATETIME       NOT NULL,
    [UpdatedOn]  DATETIME       NULL,
    [CreatedBy]  NVARCHAR (100) NOT NULL,
    [UpdatedBy]  NVARCHAR (100) NULL,
    [IsActive]   BIT            NOT NULL,
    CONSTRAINT [PK_VisitStep] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AppUser]...';


GO
CREATE TABLE [dbo].[AppUser] (
    [Id]               INT              IDENTITY (1, 1) NOT NULL,
    [MembershipUserId] UNIQUEIDENTIFIER NOT NULL,
    [SiteId]           INT              NOT NULL,
    [RoleId]           UNIQUEIDENTIFIER NOT NULL,
    [ContactId]        INT              NOT NULL,
    [Title]            VARCHAR (100)    NULL,
    [SortOrder]        INT              NOT NULL,
    [Comments]         NVARCHAR (MAX)   NULL,
    [Status]           INT              NOT NULL,
    [UpdatedOn]        DATETIME         NULL,
    [CreatedOn]        DATETIME         NULL,
    [UpdatedBy]        NVARCHAR (100)   NULL,
    [CreatedBy]        NVARCHAR (100)   NULL,
    [IsActive]         BIT              NOT NULL,
    CONSTRAINT [PK_AppUser] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AppUser].[IX_AppUser_Column]...';


GO
CREATE NONCLUSTERED INDEX [IX_AppUser_Column]
    ON [dbo].[AppUser]([Id] ASC, [MembershipUserId] ASC, [SiteId] ASC);


GO
PRINT N'Creating [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Id]               INT              IDENTITY (1, 1) NOT NULL,
    [ApplicationId]    UNIQUEIDENTIFIER NOT NULL,
    [UserId]           UNIQUEIDENTIFIER NOT NULL,
    [UserName]         NVARCHAR (50)    NOT NULL,
    [IsAnonymous]      BIT              NOT NULL,
    [LastActivityDate] DATETIME         NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating [dbo].[Roles]...';


GO
CREATE TABLE [dbo].[Roles] (
    [Id]            INT              IDENTITY (1, 1) NOT NULL,
    [ApplicationId] UNIQUEIDENTIFIER NOT NULL,
    [RoleId]        UNIQUEIDENTIFIER NOT NULL,
    [RoleName]      NVARCHAR (256)   NOT NULL,
    [Description]   NVARCHAR (256)   NULL,
    CONSTRAINT [PK_Roles] PRIMARY KEY CLUSTERED ([RoleId] ASC)
);


GO
PRINT N'Creating [dbo].[SubjectDrugHistory]...';


GO
CREATE TABLE [dbo].[SubjectDrugHistory] (
    [Id]                 INT             IDENTITY (1, 1) NOT NULL,
    [SubjectDrugId]      INT             NOT NULL,
    [SubjectId]          INT             NOT NULL,
    [DrugId]             INT             NOT NULL,
    [AppointmentId]      INT             NOT NULL,
    [StartDate]          DATETIME        NULL,
    [EndDate]            DATETIME        NULL,
    [MultipleTrialsId]   INT             NULL,
    [DurationUsed]       INT             NULL,
    [ReasonStoppedId]    INT             NOT NULL,
    [ReasonTypeId]       INT             NOT NULL,
    [TreatmentInducedId] INT             NOT NULL,
    [DosageFrequencyId]  INT             NOT NULL,
    [IsCurrent]          BIT             NOT NULL,
    [IsChanged]          BIT             NOT NULL,
    [IsStopped]          BIT             NOT NULL,
    [IsBeforeStudy]      BIT             NOT NULL,
    [Dosage]             NVARCHAR (200)  NULL,
    [DosageType]         NVARCHAR (200)  NULL,
    [Notes]              NVARCHAR (1000) NULL,
    [MdNotes]            NVARCHAR (MAX)  NULL,
    [Comments]           NVARCHAR (MAX)  NULL,
    [Status]             INT             NOT NULL,
    [CreatedOn]          DATETIME        NOT NULL,
    [UpdatedOn]          DATETIME        NULL,
    [SavedOn]            DATETIME2 (7)   NOT NULL
);


GO
PRINT N'Creating [dbo].[Profiles]...';


GO
CREATE TABLE [dbo].[Profiles] (
    [Id]                   INT              IDENTITY (1, 1) NOT NULL,
    [UserId]               UNIQUEIDENTIFIER NOT NULL,
    [PropertyNames]        NVARCHAR (4000)  NOT NULL,
    [PropertyValueStrings] NVARCHAR (4000)  NOT NULL,
    [PropertyValueBinary]  IMAGE            NOT NULL,
    [LastUpdatedDate]      DATETIME         NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating [dbo].[Drug]...';


GO
CREATE TABLE [dbo].[Drug] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [DrugClassId] INT            NOT NULL,
    [DrugTypeId]  INT            NULL,
    [StudyId]     INT            NOT NULL,
    [Name]        NVARCHAR (500) NOT NULL,
    [Directions]  NVARCHAR (500) NULL,
    [Status]      INT            NOT NULL,
    [Description] NVARCHAR (500) NULL,
    [SortOrder]   INT            NOT NULL,
    [CreatedOn]   DATETIME       NULL,
    [UpdatedOn]   DATETIME       NULL,
    [CreatedBy]   NVARCHAR (100) NULL,
    [UpdatedBy]   NVARCHAR (100) NULL,
    [IsActive]    BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90),
    UNIQUE NONCLUSTERED ([Name] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[FormVisibilityByVisitForSubject]...';


GO
CREATE TABLE [dbo].[FormVisibilityByVisitForSubject] (
    [Id]               INT            IDENTITY (1, 1) NOT NULL,
    [FormId]           INT            NOT NULL,
    [VisitId]          INT            NOT NULL,
    [DaysPriorToVisit] INT            NOT NULL,
    [DaysAfterVisit]   INT            NOT NULL,
    [Description]      NVARCHAR (500) NULL,
    [SortOrder]        INT            NOT NULL,
    [Status]           INT            NOT NULL,
    [CreatedOn]        DATETIME       NOT NULL,
    [UpdatedOn]        DATETIME       NULL,
    [CreatedBy]        NVARCHAR (100) NOT NULL,
    [UpdatedBy]        NVARCHAR (100) NULL,
    [IsActive]         BIT            NOT NULL,
    CONSTRAINT [PK_FormVisibilityByVisitForSubject] PRIMARY KEY CLUSTERED ([FormId] ASC, [VisitId] ASC)
);


GO
PRINT N'Creating [dbo].[Memberships]...';


GO
CREATE TABLE [dbo].[Memberships] (
    [Id]                                      INT              IDENTITY (1, 1) NOT NULL,
    [ApplicationId]                           UNIQUEIDENTIFIER NOT NULL,
    [UserId]                                  UNIQUEIDENTIFIER NOT NULL,
    [Password]                                NVARCHAR (128)   NOT NULL,
    [PasswordFormat]                          INT              NOT NULL,
    [PasswordSalt]                            NVARCHAR (128)   NOT NULL,
    [Email]                                   NVARCHAR (256)   NULL,
    [PasswordQuestion]                        NVARCHAR (256)   NULL,
    [PasswordAnswer]                          NVARCHAR (128)   NULL,
    [IsApproved]                              BIT              NOT NULL,
    [IsLockedOut]                             BIT              NOT NULL,
    [CreateDate]                              DATETIME         NOT NULL,
    [LastLoginDate]                           DATETIME         NOT NULL,
    [LastPasswordChangedDate]                 DATETIME         NOT NULL,
    [LastLockoutDate]                         DATETIME         NOT NULL,
    [FailedPasswordAttemptCount]              INT              NOT NULL,
    [FailedPasswordAttemptWindowStart]        DATETIME         NOT NULL,
    [FailedPasswordAnswerAttemptCount]        INT              NOT NULL,
    [FailedPasswordAnswerAttemptWindowsStart] DATETIME         NOT NULL,
    [Comment]                                 NVARCHAR (256)   NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating [dbo].[Answer]...';


GO
CREATE TABLE [dbo].[Answer] (
    [Id]         INT             IDENTITY (1, 1) NOT NULL,
    [QuestionId] INT             NOT NULL,
    [OptionText] NVARCHAR (1000) NOT NULL,
    [Code]       NVARCHAR (32)   NULL,
    [Score]      INT             NULL,
    [Header]     NVARCHAR (200)  NULL,
    [Trailer]    NVARCHAR (200)  NULL,
    [Directions] NVARCHAR (500)  NULL,
    [SortOrder]  INT             NOT NULL,
    [Status]     INT             NOT NULL,
    [CreatedOn]  DATETIME        NOT NULL,
    [UpdatedOn]  DATETIME        NULL,
    [CreatedBy]  NVARCHAR (100)  NOT NULL,
    [UpdatedBy]  NVARCHAR (100)  NULL,
    [IsActive]   BIT             NOT NULL,
    CONSTRAINT [PK_Answer] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Answer].[IX_Answer_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_Answer_Id]
    ON [dbo].[Answer]([Id] ASC, [QuestionId] ASC);


GO
PRINT N'Creating [dbo].[Answer].[IX_LibraryAnswer_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_LibraryAnswer_Id]
    ON [dbo].[Answer]([Id] ASC, [QuestionId] ASC);


GO
PRINT N'Creating [dbo].[Applications]...';


GO
CREATE TABLE [dbo].[Applications] (
    [ApplicationName] NVARCHAR (235)   NOT NULL,
    [ApplicationId]   UNIQUEIDENTIFIER NOT NULL,
    [Description]     NVARCHAR (256)   NULL,
    PRIMARY KEY CLUSTERED ([ApplicationId] ASC)
);


GO
PRINT N'Creating [dbo].[SubjectAltNumber]...';


GO
CREATE TABLE [dbo].[SubjectAltNumber] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [SubjectId]   INT            NOT NULL,
    [AltId]       NVARCHAR (100) NOT NULL,
    [Description] NVARCHAR (250) NULL,
    [Comment]     NVARCHAR (MAX) NULL,
    [Directions]  NVARCHAR (500) NULL,
    [SortOrder]   INT            NOT NULL,
    [Status]      INT            NOT NULL,
    [CreatedOn]   DATETIME       NOT NULL,
    [UpdatedOn]   DATETIME       NULL,
    [CreatedBy]   NVARCHAR (100) NOT NULL,
    [UpdatedBy]   NVARCHAR (100) NULL,
    [IsActive]    BIT            NOT NULL,
    CONSTRAINT [PK_SubjectAltNumber] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ScheduleSubjectVisit]...';


GO
CREATE TABLE [dbo].[ScheduleSubjectVisit] (
    [SubjectId] INT NOT NULL,
    [VisitId]   INT NOT NULL,
    CONSTRAINT [PK_ScheduleSubjectVisit] PRIMARY KEY CLUSTERED ([SubjectId] ASC, [VisitId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[MessageQueue]...';


GO
CREATE TABLE [dbo].[MessageQueue] (
    [Id]              INT            IDENTITY (1, 1) NOT NULL,
    [TemplateId]      INT            NOT NULL,
    [PriorityId]      INT            NOT NULL,
    [Data]            NVARCHAR (MAX) NULL,
    [RecipientId]     INT            NOT NULL,
    [SenderId]        INT            NOT NULL,
    [StatusId]        INT            NOT NULL,
    [QueuedOn]        DATETIME       NOT NULL,
    [LastProcessedOn] DATETIME       NULL,
    [TriesCount]      INT            NOT NULL,
    [Description]     NVARCHAR (500) NULL,
    [SortOrder]       INT            NOT NULL,
    [Status]          INT            NOT NULL,
    [CreatedOn]       DATETIME       NOT NULL,
    [UpdatedOn]       DATETIME       NULL,
    [CreatedBy]       NVARCHAR (100) NOT NULL,
    [UpdatedBy]       NVARCHAR (100) NULL,
    [IsActive]        BIT            NOT NULL,
    CONSTRAINT [PK_MessageQueue] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[VisitForms]...';


GO
CREATE TABLE [dbo].[VisitForms] (
    [VisitId]   INT NOT NULL,
    [FormId]    INT NOT NULL,
    [SortOrder] INT NULL,
    CONSTRAINT [PK_VisitForms] PRIMARY KEY CLUSTERED ([VisitId] ASC, [FormId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[VisitForms].[IX_VisitForms_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_VisitForms_Id]
    ON [dbo].[VisitForms]([VisitId] ASC, [FormId] ASC)
    INCLUDE([SortOrder]);


GO
PRINT N'Creating [dbo].[MessageTemplate]...';


GO
CREATE TABLE [dbo].[MessageTemplate] (
    [Id]                INT             IDENTITY (1, 1) NOT NULL,
    [Name]              NVARCHAR (200)  NOT NULL,
    [BccEmailAddresses] NVARCHAR (200)  NULL,
    [Subject]           NVARCHAR (1000) NULL,
    [Body]              NVARCHAR (MAX)  NULL,
    [LanguageId]        INT             NOT NULL,
    [MessageProviderId] INT             NOT NULL,
    [Description]       NVARCHAR (500)  NULL,
    [SortOrder]         INT             NOT NULL,
    [Status]            INT             NOT NULL,
    [CreatedOn]         DATETIME        NOT NULL,
    [UpdatedOn]         DATETIME        NULL,
    [CreatedBy]         NVARCHAR (100)  NOT NULL,
    [UpdatedBy]         NVARCHAR (100)  NULL,
    [IsActive]          BIT             NOT NULL,
    CONSTRAINT [PK_MessageTemplate] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[VisitStepMapping]...';


GO
CREATE TABLE [dbo].[VisitStepMapping] (
    [VisitStepId] INT NOT NULL,
    [VisitId]     INT NOT NULL,
    CONSTRAINT [PK_VisitStepMapping] PRIMARY KEY CLUSTERED ([VisitStepId] ASC, [VisitId] ASC)
);


GO
PRINT N'Creating [dbo].[LocaleStringResource]...';


GO
CREATE TABLE [dbo].[LocaleStringResource] (
    [Id]            INT             IDENTITY (1, 1) NOT NULL,
    [LanguageId]    INT             NOT NULL,
    [ResourceName]  NVARCHAR (200)  NOT NULL,
    [ResourceValue] NVARCHAR (1000) NOT NULL,
    [Description]   NVARCHAR (500)  NULL,
    [SortOrder]     INT             NOT NULL,
    [Status]        INT             NOT NULL,
    [CreatedOn]     DATETIME        NOT NULL,
    [UpdatedOn]     DATETIME        NULL,
    [CreatedBy]     NVARCHAR (100)  NOT NULL,
    [UpdatedBy]     NVARCHAR (100)  NULL,
    [IsActive]      BIT             NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[VisitStepVisitSequence]...';


GO
CREATE TABLE [dbo].[VisitStepVisitSequence] (
    [VisitStepId]   INT NOT NULL,
    [VisitId]       INT NOT NULL,
    [DaysFromBase]  INT NOT NULL,
    [IsActive]      BIT NOT NULL,
    [Deviation]     INT NOT NULL,
    [SortOrder]     INT NOT NULL,
    [IsTermination] BIT NOT NULL,
    CONSTRAINT [PK_VisitStepVisitSequence] PRIMARY KEY CLUSTERED ([VisitStepId] ASC, [VisitId] ASC)
);


GO
PRINT N'Creating [dbo].[Language]...';


GO
CREATE TABLE [dbo].[Language] (
    [Id]                INT            IDENTITY (1, 1) NOT NULL,
    [Name]              NVARCHAR (100) NOT NULL,
    [LanguageCulture]   NVARCHAR (20)  NOT NULL,
    [UniqueSeoCode]     NVARCHAR (2)   NULL,
    [FlagImageFileName] NVARCHAR (50)  NULL,
    [Published]         BIT            NOT NULL,
    [Description]       NVARCHAR (500) NULL,
    [SortOrder]         INT            NOT NULL,
    [Status]            INT            NOT NULL,
    [CreatedOn]         DATETIME       NOT NULL,
    [UpdatedOn]         DATETIME       NULL,
    [CreatedBy]         NVARCHAR (100) NOT NULL,
    [UpdatedBy]         NVARCHAR (100) NULL,
    [IsActive]          BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Visit]...';


GO
CREATE TABLE [dbo].[Visit] (
    [Id]            INT            IDENTITY (1, 1) NOT NULL,
    [VisitTypeId]   INT            NOT NULL,
    [ArmId]         INT            NOT NULL,
    [Name]          NVARCHAR (100) NOT NULL,
    [Code]          NVARCHAR (32)  NULL,
    [Directions]    NVARCHAR (500) NULL,
    [ParentVisitId] INT            NULL,
    [IsBaseVisit]   BIT            NOT NULL,
    [CanRepeat]     BIT            NOT NULL,
    [CanMove]       BIT            NOT NULL,
    [HasChild]      BIT            NOT NULL,
    [SortOrder]     INT            NOT NULL,
    [Status]        INT            NOT NULL,
    [CreatedOn]     DATETIME       NOT NULL,
    [UpdatedOn]     DATETIME       NULL,
    [CreatedBy]     NVARCHAR (100) NOT NULL,
    [UpdatedBy]     NVARCHAR (100) NULL,
    [IsActive]      BIT            NOT NULL,
    CONSTRAINT [PK_Visit] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [UX_Visit_Name] UNIQUE NONCLUSTERED ([Name] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[MessageProvider]...';


GO
CREATE TABLE [dbo].[MessageProvider] (
    [Id]              INT             IDENTITY (1, 1) NOT NULL,
    [Name]            NVARCHAR (200)  NOT NULL,
    [LicenseKey]      NVARCHAR (1000) NULL,
    [AccountName]     NVARCHAR (200)  NULL,
    [AccountPassword] NVARCHAR (100)  NULL,
    [ServiceUri]      NVARCHAR (MAX)  NULL,
    [Description]     NVARCHAR (500)  NULL,
    [SortOrder]       INT             NOT NULL,
    [Status]          INT             NOT NULL,
    [CreatedOn]       DATETIME        NOT NULL,
    [UpdatedOn]       DATETIME        NULL,
    [CreatedBy]       NVARCHAR (100)  NOT NULL,
    [UpdatedBy]       NVARCHAR (100)  NULL,
    [IsActive]        BIT             NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Subject]...';


GO
CREATE TABLE [dbo].[Subject] (
    [Id]             INT             IDENTITY (1000, 1) NOT NULL,
    [SiteId]         INT             NOT NULL,
    [ContactId]      INT             NOT NULL,
    [StudyId]        INT             NOT NULL,
    [Nickname]       NVARCHAR (100)  NULL,
    [FamilyId]       NVARCHAR (100)  NULL,
    [Notes]          NVARCHAR (1000) NULL,
    [NIMHID]         NVARCHAR (100)  NULL,
    [GenderTypeId]   INT             NOT NULL,
    [YearBorn]       INT             NOT NULL,
    [DateOfBirth]    NVARCHAR (50)   NULL,
    [SSN]            NVARCHAR (40)   NULL,
    [SSNEnc]         VARBINARY (256) NULL,
    [FirstNameEnc]   VARBINARY (256) NULL,
    [LastNameEnc]    VARBINARY (256) NULL,
    [DateOfBirthEnc] VARBINARY (256) NULL,
    [Directions]     NVARCHAR (500)  NULL,
    [SortOrder]      INT             NOT NULL,
    [Status]         INT             NOT NULL,
    [CreatedOn]      DATETIME        NOT NULL,
    [UpdatedOn]      DATETIME        NULL,
    [CreatedBy]      NVARCHAR (100)  NOT NULL,
    [UpdatedBy]      NVARCHAR (100)  NULL,
    [IsActive]       BIT             NOT NULL,
    CONSTRAINT [PK_Subject] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Subject].[IX_Subject_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_Subject_Id]
    ON [dbo].[Subject]([Id] ASC, [SiteId] ASC, [StudyId] ASC);


GO
PRINT N'Creating [dbo].[Question]...';


GO
CREATE TABLE [dbo].[Question] (
    [Id]               INT             IDENTITY (1, 1) NOT NULL,
    [FormId]           INT             NOT NULL,
    [FieldDataTypeId]  INT             NOT NULL,
    [QuestionText]     NVARCHAR (MAX)  NOT NULL,
    [Code]             NVARCHAR (32)   NULL,
    [Directions]       NVARCHAR (1000) NULL,
    [Header]           NVARCHAR (1000) NULL,
    [Trailer]          NVARCHAR (1000) NULL,
    [IsRequired]       BIT             NOT NULL,
    [ParentQuestionId] INT             NULL,
    [IsParent]         BIT             NOT NULL,
    [ValidationRule]   NVARCHAR (MAX)  NULL,
    [Description]      NVARCHAR (500)  NULL,
    [SortOrder]        INT             NOT NULL,
    [Status]           INT             NOT NULL,
    [CreatedOn]        DATETIME        NOT NULL,
    [UpdatedOn]        DATETIME        NULL,
    [CreatedBy]        NVARCHAR (100)  NOT NULL,
    [UpdatedBy]        NVARCHAR (100)  NULL,
    [IsActive]         BIT             NOT NULL,
    CONSTRAINT [PK_Question] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[Question].[IX_Question_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_Question_Id]
    ON [dbo].[Question]([Id] ASC, [FormId] ASC, [FieldDataTypeId] ASC);


GO
PRINT N'Creating [dbo].[Appointment]...';


GO
CREATE TABLE [dbo].[Appointment] (
    [Id]          INT             IDENTITY (1, 1) NOT NULL,
    [SubjectId]   INT             NOT NULL,
    [VisitId]     INT             NOT NULL,
    [SiteId]      INT             NOT NULL,
    [AppUserId]   INT             NOT NULL,
    [Title]       NVARCHAR (200)  NULL,
    [Location]    NVARCHAR (200)  NULL,
    [Description] NVARCHAR (2000) NULL,
    [StartDate]   DATE            NOT NULL,
    [StartTime]   TIME (7)        NULL,
    [EndDate]     DATE            NOT NULL,
    [EndTime]     TIME (7)        NULL,
    [VisitStepId] INT             NOT NULL,
    [Status]      INT             NOT NULL,
    [CreatedBy]   NVARCHAR (100)  NULL,
    [CreatedOn]   DATETIME        NOT NULL,
    [UpdatedOn]   DATETIME        NULL,
    [UpdatedBy]   NVARCHAR (100)  NULL,
    [IsActive]    BIT             NOT NULL,
    CONSTRAINT [PK_VisitSchedule] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[Appointment].[IX_Appointment_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_Appointment_Id]
    ON [dbo].[Appointment]([Id] ASC, [SubjectId] ASC, [VisitId] ASC, [SiteId] ASC, [AppUserId] ASC);


GO
PRINT N'Creating [dbo].[DrugClass]...';


GO
CREATE TABLE [dbo].[DrugClass] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [DrugCategoryId] INT            NOT NULL,
    [Name]           NVARCHAR (64)  NULL,
    [Directions]     NVARCHAR (500) NULL,
    [Description]    NVARCHAR (500) NULL,
    [SortOrder]      INT            NOT NULL,
    [Status]         INT            NOT NULL,
    [CreatedOn]      DATETIME       NOT NULL,
    [UpdatedOn]      DATETIME       NULL,
    [CreatedBy]      NVARCHAR (100) NOT NULL,
    [UpdatedBy]      NVARCHAR (100) NULL,
    [IsActive]       BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[Code]...';


GO
CREATE TABLE [dbo].[Code] (
    [Id]          INT            NOT NULL,
    [CodeTypeId]  INT            NOT NULL,
    [EnumId]      INT            NOT NULL,
    [Name]        NVARCHAR (64)  NOT NULL,
    [Description] NVARCHAR (500) NULL,
    [SortOrder]   INT            NOT NULL,
    [CreatedOn]   DATETIME       NULL,
    [UpdatedOn]   DATETIME       NULL,
    [CreatedBy]   NVARCHAR (100) NULL,
    [UpdatedBy]   NVARCHAR (100) NULL,
    [IsActive]    BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[Code].[IX_Code_TypeId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Code_TypeId]
    ON [dbo].[Code]([CodeTypeId] ASC);


GO
PRINT N'Creating [dbo].[AppointmentFormStatusType]...';


GO
CREATE TABLE [dbo].[AppointmentFormStatusType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FormType]...';


GO
CREATE TABLE [dbo].[FormType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[EntityStatusType]...';


GO
CREATE TABLE [dbo].[EntityStatusType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[GenderType]...';


GO
CREATE TABLE [dbo].[GenderType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [CK_GenderType_Unique] UNIQUE NONCLUSTERED ([Name] ASC)
);


GO
PRINT N'Creating [dbo].[CountryState]...';


GO
CREATE TABLE [dbo].[CountryState] (
    [CountryId] INT NOT NULL,
    [StateId]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([StateId] ASC, [CountryId] ASC)
);


GO
PRINT N'Creating [dbo].[State]...';


GO
CREATE TABLE [dbo].[State] (
    [Id]        INT            NOT NULL,
    [Name]      NVARCHAR (100) NOT NULL,
    [Abbr]      CHAR (2)       NOT NULL,
    [SortOrder] INT            NOT NULL,
    [Status]    INT            NOT NULL,
    [CreatedOn] DATETIME       NOT NULL,
    [UpdatedOn] DATETIME       NULL,
    [CreatedBy] NVARCHAR (100) NOT NULL,
    [UpdatedBy] NVARCHAR (100) NULL,
    [IsActive]  BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Country]...';


GO
CREATE TABLE [dbo].[Country] (
    [Id]         INT            NOT NULL,
    [Abbr]       NVARCHAR (80)  NULL,
    [Name]       NVARCHAR (250) NOT NULL,
    [Iso3]       CHAR (3)       NULL,
    [FlagImgUrl] NVARCHAR (MAX) NULL,
    [SortOrder]  INT            NOT NULL,
    [Status]     INT            NOT NULL,
    [CreatedOn]  DATETIME       NOT NULL,
    [UpdatedOn]  DATETIME       NULL,
    [CreatedBy]  NVARCHAR (100) NOT NULL,
    [UpdatedBy]  NVARCHAR (100) NULL,
    [IsActive]   BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Country].[IX_Country_Name]...';


GO
CREATE NONCLUSTERED INDEX [IX_Country_Name]
    ON [dbo].[Country]([Name] ASC);


GO
PRINT N'Creating [dbo].[ContactType]...';


GO
CREATE TABLE [dbo].[ContactType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ContactEmail]...';


GO
CREATE TABLE [dbo].[ContactEmail] (
    [ContactId] INT NOT NULL,
    [EmailId]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([EmailId] ASC, [ContactId] ASC)
);


GO
PRINT N'Creating [dbo].[ContactPhone]...';


GO
CREATE TABLE [dbo].[ContactPhone] (
    [ContactId] INT NOT NULL,
    [PhoneId]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([PhoneId] ASC, [ContactId] ASC)
);


GO
PRINT N'Creating [dbo].[Email]...';


GO
CREATE TABLE [dbo].[Email] (
    [Id]        INT            IDENTITY (1, 1) NOT NULL,
    [Address]   NVARCHAR (250) NOT NULL,
    [SortOrder] INT            NOT NULL,
    [Status]    INT            NOT NULL,
    [CreatedOn] DATETIME       NOT NULL,
    [UpdatedOn] DATETIME       NULL,
    [CreatedBy] NVARCHAR (100) NOT NULL,
    [UpdatedBy] NVARCHAR (100) NULL,
    [IsActive]  BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AddressType]...';


GO
CREATE TABLE [dbo].[AddressType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[PhoneType]...';


GO
CREATE TABLE [dbo].[PhoneType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Phone]...';


GO
CREATE TABLE [dbo].[Phone] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [CountryCode] NVARCHAR (10)  NOT NULL,
    [AreaCode]    INT            NOT NULL,
    [Number]      INT            NOT NULL,
    [Telephone]   NVARCHAR (50)  NULL,
    [PhoneTypeId] INT            NULL,
    [SortOrder]   INT            NOT NULL,
    [Status]      INT            NOT NULL,
    [CreatedOn]   DATETIME       NOT NULL,
    [UpdatedOn]   DATETIME       NULL,
    [CreatedBy]   NVARCHAR (100) NOT NULL,
    [UpdatedBy]   NVARCHAR (100) NULL,
    [IsActive]    BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ContactAddress]...';


GO
CREATE TABLE [dbo].[ContactAddress] (
    [ContactId] INT NOT NULL,
    [AddressId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([ContactId] ASC, [AddressId] ASC)
);


GO
PRINT N'Creating [dbo].[Address]...';


GO
CREATE TABLE [dbo].[Address] (
    [Id]            INT            IDENTITY (1, 1) NOT NULL,
    [AddressTypeId] INT            NOT NULL,
    [Street]        NVARCHAR (250) NULL,
    [City]          NVARCHAR (100) NULL,
    [PostalCode]    NVARCHAR (50)  NULL,
    [StateId]       INT            NULL,
    [CountryId]     INT            NULL,
    [SortOrder]     INT            NOT NULL,
    [Status]        INT            NOT NULL,
    [CreatedOn]     DATETIME       NOT NULL,
    [UpdatedOn]     DATETIME       NULL,
    [CreatedBy]     NVARCHAR (100) NOT NULL,
    [UpdatedBy]     NVARCHAR (100) NULL,
    [IsActive]      BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Contact]...';


GO
CREATE TABLE [dbo].[Contact] (
    [Id]            INT            IDENTITY (1, 1) NOT NULL,
    [ContactTypeId] INT            NOT NULL,
    [FirstName]     NVARCHAR (100) NULL,
    [MiddleName]    NVARCHAR (50)  NULL,
    [LastName]      NVARCHAR (100) NULL,
    [SortOrder]     INT            NOT NULL,
    [Status]        INT            NOT NULL,
    [CreatedOn]     DATETIME       NOT NULL,
    [UpdatedOn]     DATETIME       NULL,
    [CreatedBy]     NVARCHAR (100) NOT NULL,
    [UpdatedBy]     NVARCHAR (100) NULL,
    [IsActive]      BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[CssType]...';


GO
CREATE TABLE [dbo].[CssType] (
    [Id]           INT            NOT NULL,
    [CssClassName] NVARCHAR (100) NULL,
    [InputType]    NVARCHAR (50)  NOT NULL,
    [Html]         NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[StudySite]...';


GO
CREATE TABLE [dbo].[StudySite] (
    [StudyId] INT NOT NULL,
    [SiteId]  INT NOT NULL,
    PRIMARY KEY CLUSTERED ([SiteId] ASC, [StudyId] ASC)
);


GO
PRINT N'Creating [dbo].[StudySite].[IX_StudySite_ID]...';


GO
CREATE NONCLUSTERED INDEX [IX_StudySite_ID]
    ON [dbo].[StudySite]([StudyId] ASC, [SiteId] ASC);


GO
PRINT N'Creating [dbo].[Study]...';


GO
CREATE TABLE [dbo].[Study] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (100) NULL,
    [Description] NVARCHAR (500) NULL,
    [StartDate]   DATETIME       NOT NULL,
    [EndDate]     DATETIME       NULL,
    [Target]      NVARCHAR (MAX) NULL,
    [Goal]        NVARCHAR (MAX) NULL,
    [Budget]      MONEY          NULL,
    [SortOrder]   INT            NOT NULL,
    [Status]      INT            NOT NULL,
    [CreatedOn]   DATETIME       NOT NULL,
    [UpdatedOn]   DATETIME       NULL,
    [CreatedBy]   NVARCHAR (100) NOT NULL,
    [UpdatedBy]   NVARCHAR (100) NULL,
    [IsActive]    BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TimeZone]...';


GO
CREATE TABLE [dbo].[TimeZone] (
    [Id]          INT             NOT NULL,
    [Name]        NVARCHAR (100)  NULL,
    [Description] NVARCHAR (500)  NULL,
    [Offset]      NUMERIC (18, 2) NOT NULL,
    [SortOrder]   INT             NOT NULL,
    [Status]      INT             NOT NULL,
    [CreatedOn]   DATETIME        NOT NULL,
    [UpdatedOn]   DATETIME        NULL,
    [CreatedBy]   NVARCHAR (100)  NOT NULL,
    [UpdatedBy]   NVARCHAR (100)  NULL,
    [IsActive]    BIT             NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[StudySetupSteps]...';


GO
CREATE TABLE [dbo].[StudySetupSteps] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [OrganizationId] INT            NULL,
    [Name]           NVARCHAR (50)  NOT NULL,
    [ContextUrl]     NVARCHAR (MAX) NULL,
    [SortOrder]      INT            NULL,
    [CreatedBy]      NVARCHAR (50)  NOT NULL,
    [UpdatedBy]      NVARCHAR (50)  NULL,
    [CreatedOn]      NCHAR (10)     NOT NULL,
    [UpdatedOn]      DATETIME       NULL,
    [IsActive]       BIT            NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[OrganizationStudy]...';


GO
CREATE TABLE [dbo].[OrganizationStudy] (
    [OrganizationId] INT NOT NULL,
    [StudyId]        INT NOT NULL,
    CONSTRAINT [PK_OrganizationStudy] PRIMARY KEY CLUSTERED ([OrganizationId] ASC, [StudyId] ASC)
);


GO
PRINT N'Creating [dbo].[Organization]...';


GO
CREATE TABLE [dbo].[Organization] (
    [Id]          INT             IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (255)  NOT NULL,
    [Description] NVARCHAR (1000) NULL,
    [CreatedOn]   DATETIME        NOT NULL,
    [UpdatedOn]   DATETIME        NULL,
    [CreatedBy]   NVARCHAR (100)  NOT NULL,
    [UpdatedBy]   NVARCHAR (100)  NULL,
    [IsActive]    BIT             NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ErrorLog]...';


GO
CREATE TABLE [dbo].[ErrorLog] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [Message]    NVARCHAR (MAX) NULL,
    [StackTrace] NVARCHAR (MAX) NULL,
    [CreatedOn]  DATETIME       NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];


GO
PRINT N'Creating [dbo].[FormInProcess]...';


GO
CREATE TABLE [dbo].[FormInProcess] (
    [Id]                  INT      IDENTITY (1, 1) NOT NULL,
    [FormId]              INT      NOT NULL,
    [SubjectId]           INT      NOT NULL,
    [AppUserId]           INT      NOT NULL,
    [IsLocked]            BIT      NOT NULL,
    [OpenendOn]           DATETIME NOT NULL,
    [ReleasedOn]          DATETIME NULL,
    [MaxLockTimeMin]      INT      NOT NULL,
    [UnlockedByAppUserId] INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[StudyFile]...';


GO
CREATE TABLE [dbo].[StudyFile] (
    [StudyId]  INT              NOT NULL,
    [FileGuid] UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([StudyId] ASC, [FileGuid] ASC)
);


GO
PRINT N'Creating [dbo].[SubjectFile]...';


GO
CREATE TABLE [dbo].[SubjectFile] (
    [SubjectId] INT              NOT NULL,
    [FileGuid]  UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([FileGuid] ASC, [SubjectId] ASC)
);


GO
PRINT N'Creating [dbo].[File]...';


GO
CREATE TABLE [dbo].[File] (
    [Id]          INT              NOT NULL,
    [FileGuid]    UNIQUEIDENTIFIER NOT NULL,
    [Name]        NVARCHAR (500)   NOT NULL,
    [FileType]    NVARCHAR (100)   NOT NULL,
    [FielContent] VARBINARY (MAX)  NOT NULL,
    [CreatedBy]   NVARCHAR (100)   NOT NULL,
    [CreatedOn]   DATETIME         NOT NULL,
    PRIMARY KEY CLUSTERED ([FileGuid] ASC),
    CONSTRAINT [CK_File_Column] UNIQUE NONCLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Feedback]...';


GO
CREATE TABLE [dbo].[Feedback] (
    [Id]        INT            IDENTITY (1, 1) NOT NULL,
    [Uri]       NVARCHAR (500) NOT NULL,
    [Comment]   NVARCHAR (MAX) NOT NULL,
    [LikeScore] INT            NOT NULL,
    [CreatedOn] DATETIME       NOT NULL,
    [CreatedBy] NVARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FormVerification]...';


GO
CREATE TABLE [dbo].[FormVerification] (
    [Id]           INT            NOT NULL,
    [FormId]       INT            NOT NULL,
    [VerifiedBy]   NVARCHAR (100) NULL,
    [VerifiedOn]   DATETIME       NULL,
    [ResultStatus] INT            NULL,
    [CreatedBy]    NVARCHAR (100) NOT NULL,
    [CreatedOn]    DATETIME       NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AnswerChildQuestion]...';


GO
CREATE TABLE [dbo].[AnswerChildQuestion] (
    [AnswerId]   INT NOT NULL,
    [QuestionId] INT NOT NULL,
    [IsActive]   BIT NULL,
    CONSTRAINT [PK_AnswerChildQuestion] PRIMARY KEY CLUSTERED ([AnswerId] ASC, [QuestionId] ASC)
);


GO
PRINT N'Creating [dbo].[DrugType]...';


GO
CREATE TABLE [dbo].[DrugType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[MessageStatusType]...';


GO
CREATE TABLE [dbo].[MessageStatusType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FieldDataType]...';


GO
CREATE TABLE [dbo].[FieldDataType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FormLayoutType]...';


GO
CREATE TABLE [dbo].[FormLayoutType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ApointmentStatusType]...';


GO
CREATE TABLE [dbo].[ApointmentStatusType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[VisitType]...';


GO
CREATE TABLE [dbo].[VisitType] (
    [Id]       INT           NOT NULL,
    [Name]     NVARCHAR (50) NOT NULL,
    [IsActive] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[UserSettings]...';


GO
CREATE TABLE [dbo].[UserSettings] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [AppUserId]    INT            NOT NULL,
    [SettingName]  NVARCHAR (255) NOT NULL,
    [SettingValue] NVARCHAR (MAX) NOT NULL,
    [CreatedOn]    DATETIME       NOT NULL,
    [UpdatedOn]    DATETIME       NULL,
    [CreatedBy]    NVARCHAR (100) NOT NULL,
    [UpdatedBy]    NVARCHAR (100) NULL,
    [IsActive]     BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FormQuestionAnswerImport]...';


GO
CREATE TABLE [dbo].[FormQuestionAnswerImport] (
    [Id]             INT             IDENTITY (1, 1) NOT NULL,
    [FormId]         INT             NOT NULL,
    [FormName]       NVARCHAR (MAX)  NOT NULL,
    [title]          NVARCHAR (MAX)  NULL,
    [Description]    NVARCHAR (MAX)  NULL,
    [FormType]       INT             NOT NULL,
    [QuestionId]     INT             NOT NULL,
    [QuestionText]   NVARCHAR (MAX)  NOT NULL,
    [QuestionTypeId] INT             NOT NULL,
    [AnswerId]       INT             NOT NULL,
    [AnswerText]     NVARCHAR (1000) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[StudySetupMap]...';


GO
CREATE TABLE [dbo].[StudySetupMap] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [OrganizationId]   INT           NULL,
    [StudyId]          INT           NULL,
    [StudySetupStepId] INT           NULL,
    [StepSetupStatus]  INT           NULL,
    [CreatedBy]        NVARCHAR (50) NOT NULL,
    [UpdatedBy]        NVARCHAR (50) NULL,
    [CreatedOn]        DATETIME      NOT NULL,
    [UpdatedOn]        DATETIME      NULL,
    [IsActive]         BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Library].[LibraryQuestion]...';


GO
CREATE TABLE [Library].[LibraryQuestion] (
    [Id]               INT             IDENTITY (1, 1) NOT NULL,
    [LibraryFormId]    INT             NOT NULL,
    [FieldDataTypeId]  INT             NOT NULL,
    [QuestionText]     NVARCHAR (MAX)  NOT NULL,
    [Code]             NVARCHAR (32)   NULL,
    [Directions]       NVARCHAR (1000) NULL,
    [Header]           NVARCHAR (1000) NULL,
    [Trailer]          NVARCHAR (1000) NULL,
    [IsRequired]       BIT             NOT NULL,
    [ParentQuestionId] INT             NULL,
    [IsParent]         BIT             NOT NULL,
    [Description]      NVARCHAR (500)  NULL,
    [SortOrder]        INT             NOT NULL,
    [Status]           INT             NOT NULL,
    [CreatedOn]        DATETIME        NOT NULL,
    [UpdatedOn]        DATETIME        NULL,
    [CreatedBy]        NVARCHAR (100)  NOT NULL,
    [UpdatedBy]        NVARCHAR (100)  NULL,
    [IsActive]         BIT             NOT NULL,
    CONSTRAINT [PK_LibraryQuestion] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [Library].[LibraryQuestion].[IX_LibraryQuestion_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_LibraryQuestion_Id]
    ON [Library].[LibraryQuestion]([Id] ASC, [LibraryFormId] ASC, [FieldDataTypeId] ASC);


GO
PRINT N'Creating [Library].[LibraryAnswer]...';


GO
CREATE TABLE [Library].[LibraryAnswer] (
    [Id]         INT             IDENTITY (1, 1) NOT NULL,
    [QuestionId] INT             NOT NULL,
    [OptionText] NVARCHAR (1000) NOT NULL,
    [Code]       NVARCHAR (32)   NULL,
    [Score]      INT             NULL,
    [Header]     NVARCHAR (200)  NULL,
    [Trailer]    NVARCHAR (200)  NULL,
    [Directions] NVARCHAR (500)  NULL,
    [SortOrder]  INT             NOT NULL,
    [Status]     INT             NOT NULL,
    [CreatedOn]  DATETIME        NOT NULL,
    [UpdatedOn]  DATETIME        NULL,
    [CreatedBy]  NVARCHAR (100)  NOT NULL,
    [UpdatedBy]  NVARCHAR (100)  NULL,
    [IsActive]   BIT             NOT NULL,
    CONSTRAINT [PK_LibraryAnswer] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Library].[LibraryForm]...';


GO
CREATE TABLE [Library].[LibraryForm] (
    [Id]                INT             IDENTITY (1, 1) NOT NULL,
    [Name]              NVARCHAR (64)   NOT NULL,
    [Code]              NVARCHAR (32)   NULL,
    [FormTypeId]        INT             NOT NULL,
    [Title]             NVARCHAR (500)  NULL,
    [Directions]        NVARCHAR (1000) NULL,
    [Header]            NVARCHAR (1000) NULL,
    [Trailer]           NVARCHAR (1000) NULL,
    [IsFilledBySubject] BIT             NOT NULL,
    [ShowTotalScore]    BIT             NOT NULL,
    [LayoutTypeId]      INT             NOT NULL,
    [IsDoubleChecked]   BIT             NULL,
    [Description]       NVARCHAR (500)  NULL,
    [SortOrder]         INT             NOT NULL,
    [Status]            INT             NOT NULL,
    [CreatedOn]         DATETIME        NOT NULL,
    [UpdatedOn]         DATETIME        NULL,
    [CreatedBy]         NVARCHAR (100)  NOT NULL,
    [UpdatedBy]         NVARCHAR (100)  NULL,
    [IsActive]          BIT             NOT NULL,
    CONSTRAINT [PK_Form] PRIMARY KEY CLUSTERED ([Id] ASC) WITH (FILLFACTOR = 90),
    CONSTRAINT [UX_Form_Name] UNIQUE NONCLUSTERED ([Name] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [Library].[LibraryForm].[IX_LibraryForm_Id]...';


GO
CREATE NONCLUSTERED INDEX [IX_LibraryForm_Id]
    ON [Library].[LibraryForm]([Id] ASC, [Name] ASC, [FormTypeId] ASC);


GO
PRINT N'Creating on [dbo].[CodeType].[SortOrder]...';


GO
ALTER TABLE [dbo].[CodeType]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[CodeType].[CreatedOn]...';


GO
ALTER TABLE [dbo].[CodeType]
    ADD DEFAULT GETUTCDATE() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[CodeType].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[CodeType]
    ADD DEFAULT GETUTCDATE() FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[CodeType].[IsActive]...';


GO
ALTER TABLE [dbo].[CodeType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[CTGovSubmission].[SortOrder]...';


GO
ALTER TABLE [dbo].[CTGovSubmission]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[CTGovSubmission].[CreatedOn]...';


GO
ALTER TABLE [dbo].[CTGovSubmission]
    ADD DEFAULT GETUTCDATE() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[CTGovSubmission].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[CTGovSubmission]
    ADD DEFAULT GETUTCDATE() FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[CTGovSubmission].[IsActive]...';


GO
ALTER TABLE [dbo].[CTGovSubmission]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[DrugCategory].[SortOrder]...';


GO
ALTER TABLE [dbo].[DrugCategory]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[DrugCategory].[Status]...';


GO
ALTER TABLE [dbo].[DrugCategory]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[DrugCategory].[CreatedOn]...';


GO
ALTER TABLE [dbo].[DrugCategory]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[DrugCategory].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[DrugCategory]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[DrugCategory].[IsActive]...';


GO
ALTER TABLE [dbo].[DrugCategory]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Arm].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Arm]
    ADD DEFAULT GETUTCDATE() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Arm].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Arm]
    ADD DEFAULT GETUTCDATE() FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Arm].[IsActive]...';


GO
ALTER TABLE [dbo].[Arm]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Form].[FormTypeId]...';


GO
ALTER TABLE [dbo].[Form]
    ADD DEFAULT ((0)) FOR [FormTypeId];


GO
PRINT N'Creating on [dbo].[Form].[IsFilledBySubject]...';


GO
ALTER TABLE [dbo].[Form]
    ADD DEFAULT ((0)) FOR [IsFilledBySubject];


GO
PRINT N'Creating on [dbo].[Form].[ShowTotalScore]...';


GO
ALTER TABLE [dbo].[Form]
    ADD DEFAULT ((0)) FOR [ShowTotalScore];


GO
PRINT N'Creating [dbo].[DF_Form_DoubleChecked]...';


GO
ALTER TABLE [dbo].[Form]
    ADD CONSTRAINT [DF_Form_DoubleChecked] DEFAULT ((0)) FOR [IsDoubleChecked];


GO
PRINT N'Creating on [dbo].[Form].[SortOrder]...';


GO
ALTER TABLE [dbo].[Form]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Form].[Status]...';


GO
ALTER TABLE [dbo].[Form]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Form].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Form]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Form].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Form]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Form].[IsActive]...';


GO
ALTER TABLE [dbo].[Form]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Form].[NotifyOnChange]...';


GO
ALTER TABLE [dbo].[Form]
    ADD DEFAULT 0 FOR [NotifyOnChange];


GO
PRINT N'Creating on [dbo].[Form].[NotifyOnCompletion]...';


GO
ALTER TABLE [dbo].[Form]
    ADD DEFAULT 1 FOR [NotifyOnCompletion];


GO
PRINT N'Creating on [dbo].[FormAnswer].[CreatedOn]...';


GO
ALTER TABLE [dbo].[FormAnswer]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[FormAnswer].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[FormAnswer]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[RecreationalDrugOrSubstance].[SortOrder]...';


GO
ALTER TABLE [dbo].[RecreationalDrugOrSubstance]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[RecreationalDrugOrSubstance].[Status]...';


GO
ALTER TABLE [dbo].[RecreationalDrugOrSubstance]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[RecreationalDrugOrSubstance].[CreatedOn]...';


GO
ALTER TABLE [dbo].[RecreationalDrugOrSubstance]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[RecreationalDrugOrSubstance].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[RecreationalDrugOrSubstance]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[RecreationalDrugOrSubstance].[IsActive]...';


GO
ALTER TABLE [dbo].[RecreationalDrugOrSubstance]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[AppointmentForm].[TotalScore]...';


GO
ALTER TABLE [dbo].[AppointmentForm]
    ADD DEFAULT ((0)) FOR [TotalScore];


GO
PRINT N'Creating on [dbo].[AppointmentForm].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[AppointmentForm]
    ADD DEFAULT GETUTCDATE() FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[AppointmentForm].[SortOrder]...';


GO
ALTER TABLE [dbo].[AppointmentForm]
    ADD DEFAULT 0 FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[AppointmentForm].[CreatedOn]...';


GO
ALTER TABLE [dbo].[AppointmentForm]
    ADD DEFAULT GETUTCDATE() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[AppointmentForm].[IsActive]...';


GO
ALTER TABLE [dbo].[AppointmentForm]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[SchemaVersion].[CreatedOn]...';


GO
ALTER TABLE [dbo].[SchemaVersion]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Settings].[SortOrder]...';


GO
ALTER TABLE [dbo].[Settings]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Settings].[Status]...';


GO
ALTER TABLE [dbo].[Settings]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Settings].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Settings]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Settings].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Settings]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Settings].[IsActive]...';


GO
ALTER TABLE [dbo].[Settings]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Site].[IsPrimary]...';


GO
ALTER TABLE [dbo].[Site]
    ADD DEFAULT (0) FOR [IsPrimary];


GO
PRINT N'Creating on [dbo].[Site].[SortOrder]...';


GO
ALTER TABLE [dbo].[Site]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Site].[Status]...';


GO
ALTER TABLE [dbo].[Site]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Site].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Site]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Site].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Site]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Site].[IsActive]...';


GO
ALTER TABLE [dbo].[Site]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[SubjectDrug].[IsCurrent]...';


GO
ALTER TABLE [dbo].[SubjectDrug]
    ADD DEFAULT ((0)) FOR [IsCurrent];


GO
PRINT N'Creating on [dbo].[SubjectDrug].[IsChanged]...';


GO
ALTER TABLE [dbo].[SubjectDrug]
    ADD DEFAULT ((0)) FOR [IsChanged];


GO
PRINT N'Creating on [dbo].[SubjectDrug].[IsStopped]...';


GO
ALTER TABLE [dbo].[SubjectDrug]
    ADD DEFAULT ((0)) FOR [IsStopped];


GO
PRINT N'Creating on [dbo].[SubjectDrug].[IsBeforeStudy]...';


GO
ALTER TABLE [dbo].[SubjectDrug]
    ADD DEFAULT ((0)) FOR [IsBeforeStudy];


GO
PRINT N'Creating on [dbo].[SubjectDrug].[SortOrder]...';


GO
ALTER TABLE [dbo].[SubjectDrug]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[SubjectDrug].[Status]...';


GO
ALTER TABLE [dbo].[SubjectDrug]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[SubjectDrug].[CreatedOn]...';


GO
ALTER TABLE [dbo].[SubjectDrug]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[SubjectDrug].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[SubjectDrug]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[SubjectDrug].[IsActive]...';


GO
ALTER TABLE [dbo].[SubjectDrug]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[VisitStep].[SortOrder]...';


GO
ALTER TABLE [dbo].[VisitStep]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[VisitStep].[Status]...';


GO
ALTER TABLE [dbo].[VisitStep]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[VisitStep].[CreatedOn]...';


GO
ALTER TABLE [dbo].[VisitStep]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[VisitStep].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[VisitStep]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[VisitStep].[IsActive]...';


GO
ALTER TABLE [dbo].[VisitStep]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating [dbo].[DF__AppUser__SortOrd__753864A1]...';


GO
ALTER TABLE [dbo].[AppUser]
    ADD CONSTRAINT [DF__AppUser__SortOrd__753864A1] DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating [dbo].[DF__AppUser__Status__762C88DA]...';


GO
ALTER TABLE [dbo].[AppUser]
    ADD CONSTRAINT [DF__AppUser__Status__762C88DA] DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[AppUser].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[AppUser]
    ADD DEFAULT GETUTCDATE() FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[AppUser].[CreatedOn]...';


GO
ALTER TABLE [dbo].[AppUser]
    ADD DEFAULT GETUTCDATE() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[AppUser].[IsActive]...';


GO
ALTER TABLE [dbo].[AppUser]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating [dbo].[DF_SubjectDrugHistory_IsCurrent]...';


GO
ALTER TABLE [dbo].[SubjectDrugHistory]
    ADD CONSTRAINT [DF_SubjectDrugHistory_IsCurrent] DEFAULT ((0)) FOR [IsCurrent];


GO
PRINT N'Creating [dbo].[DF_SubjectDrugHistory_IsChanged]...';


GO
ALTER TABLE [dbo].[SubjectDrugHistory]
    ADD CONSTRAINT [DF_SubjectDrugHistory_IsChanged] DEFAULT ((0)) FOR [IsChanged];


GO
PRINT N'Creating [dbo].[DF_SubjectDrugHistory_IsStopped]...';


GO
ALTER TABLE [dbo].[SubjectDrugHistory]
    ADD CONSTRAINT [DF_SubjectDrugHistory_IsStopped] DEFAULT ((0)) FOR [IsStopped];


GO
PRINT N'Creating [dbo].[DF_SubjectDrugHistory_IsBeforeStudy]...';


GO
ALTER TABLE [dbo].[SubjectDrugHistory]
    ADD CONSTRAINT [DF_SubjectDrugHistory_IsBeforeStudy] DEFAULT ((0)) FOR [IsBeforeStudy];


GO
PRINT N'Creating [dbo].[DF_SubjectDrugHistory_Status]...';


GO
ALTER TABLE [dbo].[SubjectDrugHistory]
    ADD CONSTRAINT [DF_SubjectDrugHistory_Status] DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating [dbo].[DF_SubjectDrugHistory_CreatedOn]...';


GO
ALTER TABLE [dbo].[SubjectDrugHistory]
    ADD CONSTRAINT [DF_SubjectDrugHistory_CreatedOn] DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating [dbo].[DF_SubjectDrugHistory_SavedOn]...';


GO
ALTER TABLE [dbo].[SubjectDrugHistory]
    ADD CONSTRAINT [DF_SubjectDrugHistory_SavedOn] DEFAULT (GETUTCDATE()) FOR [SavedOn];


GO
PRINT N'Creating on [dbo].[Drug].[Status]...';


GO
ALTER TABLE [dbo].[Drug]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Drug].[SortOrder]...';


GO
ALTER TABLE [dbo].[Drug]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Drug].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Drug]
    ADD DEFAULT GETUTCDATE() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Drug].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Drug]
    ADD DEFAULT GETUTCDATE() FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Drug].[IsActive]...';


GO
ALTER TABLE [dbo].[Drug]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[FormVisibilityByVisitForSubject].[SortOrder]...';


GO
ALTER TABLE [dbo].[FormVisibilityByVisitForSubject]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[FormVisibilityByVisitForSubject].[Status]...';


GO
ALTER TABLE [dbo].[FormVisibilityByVisitForSubject]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[FormVisibilityByVisitForSubject].[CreatedOn]...';


GO
ALTER TABLE [dbo].[FormVisibilityByVisitForSubject]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[FormVisibilityByVisitForSubject].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[FormVisibilityByVisitForSubject]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[FormVisibilityByVisitForSubject].[IsActive]...';


GO
ALTER TABLE [dbo].[FormVisibilityByVisitForSubject]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Answer].[SortOrder]...';


GO
ALTER TABLE [dbo].[Answer]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Answer].[Status]...';


GO
ALTER TABLE [dbo].[Answer]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Answer].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Answer]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Answer].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Answer]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Answer].[IsActive]...';


GO
ALTER TABLE [dbo].[Answer]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[SubjectAltNumber].[SortOrder]...';


GO
ALTER TABLE [dbo].[SubjectAltNumber]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[SubjectAltNumber].[Status]...';


GO
ALTER TABLE [dbo].[SubjectAltNumber]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[SubjectAltNumber].[CreatedOn]...';


GO
ALTER TABLE [dbo].[SubjectAltNumber]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[SubjectAltNumber].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[SubjectAltNumber]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[SubjectAltNumber].[IsActive]...';


GO
ALTER TABLE [dbo].[SubjectAltNumber]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[MessageQueue].[QueuedOn]...';


GO
ALTER TABLE [dbo].[MessageQueue]
    ADD DEFAULT (GETUTCDATE()) FOR [QueuedOn];


GO
PRINT N'Creating on [dbo].[MessageQueue].[TriesCount]...';


GO
ALTER TABLE [dbo].[MessageQueue]
    ADD DEFAULT ((0)) FOR [TriesCount];


GO
PRINT N'Creating on [dbo].[MessageQueue].[SortOrder]...';


GO
ALTER TABLE [dbo].[MessageQueue]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[MessageQueue].[Status]...';


GO
ALTER TABLE [dbo].[MessageQueue]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[MessageQueue].[CreatedOn]...';


GO
ALTER TABLE [dbo].[MessageQueue]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[MessageQueue].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[MessageQueue]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[MessageQueue].[IsActive]...';


GO
ALTER TABLE [dbo].[MessageQueue]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[VisitForms].[SortOrder]...';


GO
ALTER TABLE [dbo].[VisitForms]
    ADD DEFAULT 0 FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[MessageTemplate].[LanguageId]...';


GO
ALTER TABLE [dbo].[MessageTemplate]
    ADD DEFAULT ((1)) FOR [LanguageId];


GO
PRINT N'Creating on [dbo].[MessageTemplate].[MessageProviderId]...';


GO
ALTER TABLE [dbo].[MessageTemplate]
    ADD DEFAULT ((1)) FOR [MessageProviderId];


GO
PRINT N'Creating on [dbo].[MessageTemplate].[SortOrder]...';


GO
ALTER TABLE [dbo].[MessageTemplate]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[MessageTemplate].[Status]...';


GO
ALTER TABLE [dbo].[MessageTemplate]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[MessageTemplate].[CreatedOn]...';


GO
ALTER TABLE [dbo].[MessageTemplate]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[MessageTemplate].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[MessageTemplate]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[MessageTemplate].[IsActive]...';


GO
ALTER TABLE [dbo].[MessageTemplate]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[LocaleStringResource].[LanguageId]...';


GO
ALTER TABLE [dbo].[LocaleStringResource]
    ADD DEFAULT ((1)) FOR [LanguageId];


GO
PRINT N'Creating on [dbo].[LocaleStringResource].[SortOrder]...';


GO
ALTER TABLE [dbo].[LocaleStringResource]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[LocaleStringResource].[Status]...';


GO
ALTER TABLE [dbo].[LocaleStringResource]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[LocaleStringResource].[CreatedOn]...';


GO
ALTER TABLE [dbo].[LocaleStringResource]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[LocaleStringResource].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[LocaleStringResource]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[LocaleStringResource].[IsActive]...';


GO
ALTER TABLE [dbo].[LocaleStringResource]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating [dbo].[DF_VisitStepVisitSequence_DaysFromBase]...';


GO
ALTER TABLE [dbo].[VisitStepVisitSequence]
    ADD CONSTRAINT [DF_VisitStepVisitSequence_DaysFromBase] DEFAULT ((0)) FOR [DaysFromBase];


GO
PRINT N'Creating [dbo].[DF_VisitStepVisitSequence_IsActive]...';


GO
ALTER TABLE [dbo].[VisitStepVisitSequence]
    ADD CONSTRAINT [DF_VisitStepVisitSequence_IsActive] DEFAULT ((1)) FOR [IsActive];


GO
PRINT N'Creating on [dbo].[VisitStepVisitSequence].[Deviation]...';


GO
ALTER TABLE [dbo].[VisitStepVisitSequence]
    ADD DEFAULT 0 FOR [Deviation];


GO
PRINT N'Creating on [dbo].[VisitStepVisitSequence].[SortOrder]...';


GO
ALTER TABLE [dbo].[VisitStepVisitSequence]
    ADD DEFAULT 0 FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[VisitStepVisitSequence].[IsTermination]...';


GO
ALTER TABLE [dbo].[VisitStepVisitSequence]
    ADD DEFAULT 0 FOR [IsTermination];


GO
PRINT N'Creating on [dbo].[Language].[SortOrder]...';


GO
ALTER TABLE [dbo].[Language]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Language].[Status]...';


GO
ALTER TABLE [dbo].[Language]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Language].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Language]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Language].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Language]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Language].[IsActive]...';


GO
ALTER TABLE [dbo].[Language]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating [dbo].[DF__Visit__ArmId__4959E263]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD CONSTRAINT [DF__Visit__ArmId__4959E263] DEFAULT ((1)) FOR [ArmId];


GO
PRINT N'Creating on [dbo].[Visit].[IsBaseVisit]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD DEFAULT (0) FOR [IsBaseVisit];


GO
PRINT N'Creating on [dbo].[Visit].[CanRepeat]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD DEFAULT (0) FOR [CanRepeat];


GO
PRINT N'Creating on [dbo].[Visit].[CanMove]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD DEFAULT (1) FOR [CanMove];


GO
PRINT N'Creating on [dbo].[Visit].[HasChild]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD DEFAULT (0) FOR [HasChild];


GO
PRINT N'Creating on [dbo].[Visit].[SortOrder]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Visit].[Status]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Visit].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Visit].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Visit].[IsActive]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[MessageProvider].[SortOrder]...';


GO
ALTER TABLE [dbo].[MessageProvider]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[MessageProvider].[Status]...';


GO
ALTER TABLE [dbo].[MessageProvider]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[MessageProvider].[CreatedOn]...';


GO
ALTER TABLE [dbo].[MessageProvider]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[MessageProvider].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[MessageProvider]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[MessageProvider].[IsActive]...';


GO
ALTER TABLE [dbo].[MessageProvider]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Subject].[SortOrder]...';


GO
ALTER TABLE [dbo].[Subject]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Subject].[Status]...';


GO
ALTER TABLE [dbo].[Subject]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Subject].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Subject]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Subject].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Subject]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Subject].[IsActive]...';


GO
ALTER TABLE [dbo].[Subject]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Question].[IsRequired]...';


GO
ALTER TABLE [dbo].[Question]
    ADD DEFAULT ((0)) FOR [IsRequired];


GO
PRINT N'Creating on [dbo].[Question].[IsParent]...';


GO
ALTER TABLE [dbo].[Question]
    ADD DEFAULT (0) FOR [IsParent];


GO
PRINT N'Creating on [dbo].[Question].[SortOrder]...';


GO
ALTER TABLE [dbo].[Question]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Question].[Status]...';


GO
ALTER TABLE [dbo].[Question]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Question].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Question]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Question].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Question]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Question].[IsActive]...';


GO
ALTER TABLE [dbo].[Question]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating [dbo].[DF__Appointme__Statu__047AA831]...';


GO
ALTER TABLE [dbo].[Appointment]
    ADD CONSTRAINT [DF__Appointme__Statu__047AA831] DEFAULT ((0)) FOR [Status];


GO
PRINT N'Creating [dbo].[DF__Appointme__Creat__056ECC6A]...';


GO
ALTER TABLE [dbo].[Appointment]
    ADD CONSTRAINT [DF__Appointme__Creat__056ECC6A] DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Appointment].[IsActive]...';


GO
ALTER TABLE [dbo].[Appointment]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[DrugClass].[SortOrder]...';


GO
ALTER TABLE [dbo].[DrugClass]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[DrugClass].[Status]...';


GO
ALTER TABLE [dbo].[DrugClass]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[DrugClass].[CreatedOn]...';


GO
ALTER TABLE [dbo].[DrugClass]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[DrugClass].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[DrugClass]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[DrugClass].[IsActive]...';


GO
ALTER TABLE [dbo].[DrugClass]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Code].[SortOrder]...';


GO
ALTER TABLE [dbo].[Code]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Code].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Code]
    ADD DEFAULT GETUTCDATE() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Code].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Code]
    ADD DEFAULT GETUTCDATE() FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Code].[IsActive]...';


GO
ALTER TABLE [dbo].[Code]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[AppointmentFormStatusType].[IsActive]...';


GO
ALTER TABLE [dbo].[AppointmentFormStatusType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[FormType].[IsActive]...';


GO
ALTER TABLE [dbo].[FormType]
    ADD DEFAULT (1) FOR [IsActive];


GO
PRINT N'Creating on [dbo].[EntityStatusType].[IsActive]...';


GO
ALTER TABLE [dbo].[EntityStatusType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[GenderType].[IsActive]...';


GO
ALTER TABLE [dbo].[GenderType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[State].[SortOrder]...';


GO
ALTER TABLE [dbo].[State]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[State].[Status]...';


GO
ALTER TABLE [dbo].[State]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[State].[CreatedOn]...';


GO
ALTER TABLE [dbo].[State]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[State].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[State]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[State].[IsActive]...';


GO
ALTER TABLE [dbo].[State]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Country].[SortOrder]...';


GO
ALTER TABLE [dbo].[Country]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Country].[Status]...';


GO
ALTER TABLE [dbo].[Country]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Country].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Country]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Country].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Country]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Country].[IsActive]...';


GO
ALTER TABLE [dbo].[Country]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[ContactType].[IsActive]...';


GO
ALTER TABLE [dbo].[ContactType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Email].[SortOrder]...';


GO
ALTER TABLE [dbo].[Email]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Email].[Status]...';


GO
ALTER TABLE [dbo].[Email]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Email].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Email]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Email].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Email]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Email].[IsActive]...';


GO
ALTER TABLE [dbo].[Email]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[AddressType].[IsActive]...';


GO
ALTER TABLE [dbo].[AddressType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[PhoneType].[IsActive]...';


GO
ALTER TABLE [dbo].[PhoneType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Phone].[CountryCode]...';


GO
ALTER TABLE [dbo].[Phone]
    ADD DEFAULT '1' FOR [CountryCode];


GO
PRINT N'Creating on [dbo].[Phone].[AreaCode]...';


GO
ALTER TABLE [dbo].[Phone]
    ADD DEFAULT 0 FOR [AreaCode];


GO
PRINT N'Creating on [dbo].[Phone].[Number]...';


GO
ALTER TABLE [dbo].[Phone]
    ADD DEFAULT 0 FOR [Number];


GO
PRINT N'Creating on [dbo].[Phone].[SortOrder]...';


GO
ALTER TABLE [dbo].[Phone]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Phone].[Status]...';


GO
ALTER TABLE [dbo].[Phone]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Phone].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Phone]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Phone].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Phone]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Phone].[IsActive]...';


GO
ALTER TABLE [dbo].[Phone]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Address].[SortOrder]...';


GO
ALTER TABLE [dbo].[Address]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Address].[Status]...';


GO
ALTER TABLE [dbo].[Address]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Address].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Address]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Address].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Address]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Address].[IsActive]...';


GO
ALTER TABLE [dbo].[Address]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Contact].[SortOrder]...';


GO
ALTER TABLE [dbo].[Contact]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Contact].[Status]...';


GO
ALTER TABLE [dbo].[Contact]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Contact].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Contact]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Contact].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Contact]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Contact].[IsActive]...';


GO
ALTER TABLE [dbo].[Contact]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Study].[StartDate]...';


GO
ALTER TABLE [dbo].[Study]
    ADD DEFAULT GETUTCDATE() FOR [StartDate];


GO
PRINT N'Creating on [dbo].[Study].[SortOrder]...';


GO
ALTER TABLE [dbo].[Study]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[Study].[Status]...';


GO
ALTER TABLE [dbo].[Study]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[Study].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Study]
    ADD DEFAULT GETUTCDATE() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Study].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Study]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Study].[IsActive]...';


GO
ALTER TABLE [dbo].[Study]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[TimeZone].[Offset]...';


GO
ALTER TABLE [dbo].[TimeZone]
    ADD DEFAULT 0 FOR [Offset];


GO
PRINT N'Creating on [dbo].[TimeZone].[SortOrder]...';


GO
ALTER TABLE [dbo].[TimeZone]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[TimeZone].[Status]...';


GO
ALTER TABLE [dbo].[TimeZone]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [dbo].[TimeZone].[CreatedOn]...';


GO
ALTER TABLE [dbo].[TimeZone]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[TimeZone].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[TimeZone]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[TimeZone].[IsActive]...';


GO
ALTER TABLE [dbo].[TimeZone]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[StudySetupSteps].[SortOrder]...';


GO
ALTER TABLE [dbo].[StudySetupSteps]
    ADD DEFAULT 0 FOR [SortOrder];


GO
PRINT N'Creating on [dbo].[StudySetupSteps].[CreatedOn]...';


GO
ALTER TABLE [dbo].[StudySetupSteps]
    ADD DEFAULT getdate() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[StudySetupSteps].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[StudySetupSteps]
    ADD DEFAULT getdate() FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[StudySetupSteps].[IsActive]...';


GO
ALTER TABLE [dbo].[StudySetupSteps]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[Organization].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Organization]
    ADD DEFAULT GETUTCDATE() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Organization].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[Organization]
    ADD DEFAULT GETUTCDATE() FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[Organization].[IsActive]...';


GO
ALTER TABLE [dbo].[Organization]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating [dbo].[DF_ErrorLog_CreatedOn]...';


GO
ALTER TABLE [dbo].[ErrorLog]
    ADD CONSTRAINT [DF_ErrorLog_CreatedOn] DEFAULT (getutcdate()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[FormInProcess].[IsLocked]...';


GO
ALTER TABLE [dbo].[FormInProcess]
    ADD DEFAULT 0 FOR [IsLocked];


GO
PRINT N'Creating on [dbo].[FormInProcess].[OpenendOn]...';


GO
ALTER TABLE [dbo].[FormInProcess]
    ADD DEFAULT getdate() FOR [OpenendOn];


GO
PRINT N'Creating on [dbo].[FormInProcess].[ReleasedOn]...';


GO
ALTER TABLE [dbo].[FormInProcess]
    ADD DEFAULT getdate() FOR [ReleasedOn];


GO
PRINT N'Creating on [dbo].[FormInProcess].[MaxLockTimeMin]...';


GO
ALTER TABLE [dbo].[FormInProcess]
    ADD DEFAULT 30 FOR [MaxLockTimeMin];


GO
PRINT N'Creating on [dbo].[File].[CreatedOn]...';


GO
ALTER TABLE [dbo].[File]
    ADD DEFAULT GETDATE() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[Feedback].[LikeScore]...';


GO
ALTER TABLE [dbo].[Feedback]
    ADD DEFAULT 0 FOR [LikeScore];


GO
PRINT N'Creating on [dbo].[Feedback].[CreatedOn]...';


GO
ALTER TABLE [dbo].[Feedback]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[FormVerification].[CreatedOn]...';


GO
ALTER TABLE [dbo].[FormVerification]
    ADD DEFAULT GETUTCDATE() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[AnswerChildQuestion].[IsActive]...';


GO
ALTER TABLE [dbo].[AnswerChildQuestion]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[DrugType].[IsActive]...';


GO
ALTER TABLE [dbo].[DrugType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[MessageStatusType].[IsActive]...';


GO
ALTER TABLE [dbo].[MessageStatusType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[FieldDataType].[IsActive]...';


GO
ALTER TABLE [dbo].[FieldDataType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[FormLayoutType].[IsActive]...';


GO
ALTER TABLE [dbo].[FormLayoutType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[ApointmentStatusType].[IsActive]...';


GO
ALTER TABLE [dbo].[ApointmentStatusType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[VisitType].[IsActive]...';


GO
ALTER TABLE [dbo].[VisitType]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[UserSettings].[CreatedOn]...';


GO
ALTER TABLE [dbo].[UserSettings]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[UserSettings].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[UserSettings]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[UserSettings].[IsActive]...';


GO
ALTER TABLE [dbo].[UserSettings]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [dbo].[StudySetupMap].[CreatedOn]...';


GO
ALTER TABLE [dbo].[StudySetupMap]
    ADD DEFAULT getdate() FOR [CreatedOn];


GO
PRINT N'Creating on [dbo].[StudySetupMap].[UpdatedOn]...';


GO
ALTER TABLE [dbo].[StudySetupMap]
    ADD DEFAULT getdate() FOR [UpdatedOn];


GO
PRINT N'Creating on [dbo].[StudySetupMap].[IsActive]...';


GO
ALTER TABLE [dbo].[StudySetupMap]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [Library].[LibraryQuestion].[IsRequired]...';


GO
ALTER TABLE [Library].[LibraryQuestion]
    ADD DEFAULT ((0)) FOR [IsRequired];


GO
PRINT N'Creating on [Library].[LibraryQuestion].[IsParent]...';


GO
ALTER TABLE [Library].[LibraryQuestion]
    ADD DEFAULT (0) FOR [IsParent];


GO
PRINT N'Creating on [Library].[LibraryQuestion].[SortOrder]...';


GO
ALTER TABLE [Library].[LibraryQuestion]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [Library].[LibraryQuestion].[Status]...';


GO
ALTER TABLE [Library].[LibraryQuestion]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [Library].[LibraryQuestion].[CreatedOn]...';


GO
ALTER TABLE [Library].[LibraryQuestion]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [Library].[LibraryQuestion].[UpdatedOn]...';


GO
ALTER TABLE [Library].[LibraryQuestion]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [Library].[LibraryQuestion].[IsActive]...';


GO
ALTER TABLE [Library].[LibraryQuestion]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [Library].[LibraryAnswer].[SortOrder]...';


GO
ALTER TABLE [Library].[LibraryAnswer]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [Library].[LibraryAnswer].[Status]...';


GO
ALTER TABLE [Library].[LibraryAnswer]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [Library].[LibraryAnswer].[CreatedOn]...';


GO
ALTER TABLE [Library].[LibraryAnswer]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [Library].[LibraryAnswer].[UpdatedOn]...';


GO
ALTER TABLE [Library].[LibraryAnswer]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [Library].[LibraryAnswer].[IsActive]...';


GO
ALTER TABLE [Library].[LibraryAnswer]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating on [Library].[LibraryForm].[FormTypeId]...';


GO
ALTER TABLE [Library].[LibraryForm]
    ADD DEFAULT ((0)) FOR [FormTypeId];


GO
PRINT N'Creating on [Library].[LibraryForm].[IsFilledBySubject]...';


GO
ALTER TABLE [Library].[LibraryForm]
    ADD DEFAULT ((0)) FOR [IsFilledBySubject];


GO
PRINT N'Creating on [Library].[LibraryForm].[ShowTotalScore]...';


GO
ALTER TABLE [Library].[LibraryForm]
    ADD DEFAULT ((0)) FOR [ShowTotalScore];


GO
PRINT N'Creating [Library].[DF_Form_DoubleChecked]...';


GO
ALTER TABLE [Library].[LibraryForm]
    ADD CONSTRAINT [DF_Form_DoubleChecked] DEFAULT ((0)) FOR [IsDoubleChecked];


GO
PRINT N'Creating on [Library].[LibraryForm].[SortOrder]...';


GO
ALTER TABLE [Library].[LibraryForm]
    ADD DEFAULT ((0)) FOR [SortOrder];


GO
PRINT N'Creating on [Library].[LibraryForm].[Status]...';


GO
ALTER TABLE [Library].[LibraryForm]
    ADD DEFAULT ((1)) FOR [Status];


GO
PRINT N'Creating on [Library].[LibraryForm].[CreatedOn]...';


GO
ALTER TABLE [Library].[LibraryForm]
    ADD DEFAULT (GETUTCDATE()) FOR [CreatedOn];


GO
PRINT N'Creating on [Library].[LibraryForm].[UpdatedOn]...';


GO
ALTER TABLE [Library].[LibraryForm]
    ADD DEFAULT (GETUTCDATE()) FOR [UpdatedOn];


GO
PRINT N'Creating on [Library].[LibraryForm].[IsActive]...';


GO
ALTER TABLE [Library].[LibraryForm]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating [dbo].[FK_Arm_Study]...';


GO
ALTER TABLE [dbo].[Arm]
    ADD CONSTRAINT [FK_Arm_Study] FOREIGN KEY ([StudyId]) REFERENCES [dbo].[Study] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Form_Study]...';


GO
ALTER TABLE [dbo].[Form]
    ADD CONSTRAINT [FK_Form_Study] FOREIGN KEY ([StudyId]) REFERENCES [dbo].[Study] ([Id]);


GO
PRINT N'Creating [dbo].[FK_FormAnswer_AppointmentForm]...';


GO
ALTER TABLE [dbo].[FormAnswer]
    ADD CONSTRAINT [FK_FormAnswer_AppointmentForm] FOREIGN KEY ([AppointmentFormId]) REFERENCES [dbo].[AppointmentForm] ([Id]);


GO
PRINT N'Creating [dbo].[FK_RecreationalDrugOrSubstance_Appointment]...';


GO
ALTER TABLE [dbo].[RecreationalDrugOrSubstance]
    ADD CONSTRAINT [FK_RecreationalDrugOrSubstance_Appointment] FOREIGN KEY ([AppointementId]) REFERENCES [dbo].[Appointment] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AppointmentForm_Appointment]...';


GO
ALTER TABLE [dbo].[AppointmentForm]
    ADD CONSTRAINT [FK_AppointmentForm_Appointment] FOREIGN KEY ([AppointmentId]) REFERENCES [dbo].[Appointment] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AppointmentForm_Form]...';


GO
ALTER TABLE [dbo].[AppointmentForm]
    ADD CONSTRAINT [FK_AppointmentForm_Form] FOREIGN KEY ([FormId]) REFERENCES [dbo].[Form] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AppointmentForm_FormStatusType]...';


GO
ALTER TABLE [dbo].[AppointmentForm]
    ADD CONSTRAINT [FK_AppointmentForm_FormStatusType] FOREIGN KEY ([FormStatusTypeId]) REFERENCES [dbo].[AppointmentFormStatusType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Site_TimeZone]...';


GO
ALTER TABLE [dbo].[Site]
    ADD CONSTRAINT [FK_Site_TimeZone] FOREIGN KEY ([TimeZoneId]) REFERENCES [dbo].[TimeZone] ([Id]);


GO
PRINT N'Creating [dbo].[FK_SubjectDrug_Drug]...';


GO
ALTER TABLE [dbo].[SubjectDrug]
    ADD CONSTRAINT [FK_SubjectDrug_Drug] FOREIGN KEY ([DrugId]) REFERENCES [dbo].[Drug] ([Id]);


GO
PRINT N'Creating [dbo].[FK_SubjectDrug_SubjectId]...';


GO
ALTER TABLE [dbo].[SubjectDrug]
    ADD CONSTRAINT [FK_SubjectDrug_SubjectId] FOREIGN KEY ([SubjectId]) REFERENCES [dbo].[Subject] ([Id]);


GO
PRINT N'Creating [dbo].[UsersInRoleRole]...';


GO
ALTER TABLE [dbo].[UsersInRoles]
    ADD CONSTRAINT [UsersInRoleRole] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Roles] ([RoleId]);


GO
PRINT N'Creating [dbo].[UsersInRoleUser]...';


GO
ALTER TABLE [dbo].[UsersInRoles]
    ADD CONSTRAINT [UsersInRoleUser] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_VisitStep_Arm]...';


GO
ALTER TABLE [dbo].[VisitStep]
    ADD CONSTRAINT [FK_VisitStep_Arm] FOREIGN KEY ([ArmId]) REFERENCES [dbo].[Arm] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AppUser_Site]...';


GO
ALTER TABLE [dbo].[AppUser]
    ADD CONSTRAINT [FK_AppUser_Site] FOREIGN KEY ([SiteId]) REFERENCES [dbo].[Site] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AppUser_User]...';


GO
ALTER TABLE [dbo].[AppUser]
    ADD CONSTRAINT [FK_AppUser_User] FOREIGN KEY ([MembershipUserId]) REFERENCES [dbo].[Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_AppUser_Role]...';


GO
ALTER TABLE [dbo].[AppUser]
    ADD CONSTRAINT [FK_AppUser_Role] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Roles] ([RoleId]);


GO
PRINT N'Creating [dbo].[FK_AppUser_Contact]...';


GO
ALTER TABLE [dbo].[AppUser]
    ADD CONSTRAINT [FK_AppUser_Contact] FOREIGN KEY ([ContactId]) REFERENCES [dbo].[Contact] ([Id]);


GO
PRINT N'Creating [dbo].[UserApplication]...';


GO
ALTER TABLE [dbo].[Users]
    ADD CONSTRAINT [UserApplication] FOREIGN KEY ([ApplicationId]) REFERENCES [dbo].[Applications] ([ApplicationId]);


GO
PRINT N'Creating [dbo].[RoleApplication]...';


GO
ALTER TABLE [dbo].[Roles]
    ADD CONSTRAINT [RoleApplication] FOREIGN KEY ([ApplicationId]) REFERENCES [dbo].[Applications] ([ApplicationId]);


GO
PRINT N'Creating [dbo].[UserProfile]...';


GO
ALTER TABLE [dbo].[Profiles]
    ADD CONSTRAINT [UserProfile] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Drug_DrugClass]...';


GO
ALTER TABLE [dbo].[Drug]
    ADD CONSTRAINT [FK_Drug_DrugClass] FOREIGN KEY ([DrugClassId]) REFERENCES [dbo].[DrugClass] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Drug_Study]...';


GO
ALTER TABLE [dbo].[Drug]
    ADD CONSTRAINT [FK_Drug_Study] FOREIGN KEY ([StudyId]) REFERENCES [dbo].[Study] ([Id]);


GO
PRINT N'Creating [dbo].[FK_FormVisibilityByVisitForSubject_Form]...';


GO
ALTER TABLE [dbo].[FormVisibilityByVisitForSubject]
    ADD CONSTRAINT [FK_FormVisibilityByVisitForSubject_Form] FOREIGN KEY ([FormId]) REFERENCES [dbo].[Form] ([Id]);


GO
PRINT N'Creating [dbo].[FK_FormVisibilityByVisitForSubject_Visit]...';


GO
ALTER TABLE [dbo].[FormVisibilityByVisitForSubject]
    ADD CONSTRAINT [FK_FormVisibilityByVisitForSubject_Visit] FOREIGN KEY ([VisitId]) REFERENCES [dbo].[Visit] ([Id]);


GO
PRINT N'Creating [dbo].[MembershipApplication]...';


GO
ALTER TABLE [dbo].[Memberships]
    ADD CONSTRAINT [MembershipApplication] FOREIGN KEY ([ApplicationId]) REFERENCES [dbo].[Applications] ([ApplicationId]);


GO
PRINT N'Creating [dbo].[MembershipUser]...';


GO
ALTER TABLE [dbo].[Memberships]
    ADD CONSTRAINT [MembershipUser] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Answer_Question]...';


GO
ALTER TABLE [dbo].[Answer]
    ADD CONSTRAINT [FK_Answer_Question] FOREIGN KEY ([QuestionId]) REFERENCES [dbo].[Question] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ScheduleSubjectVisit_Visit]...';


GO
ALTER TABLE [dbo].[ScheduleSubjectVisit]
    ADD CONSTRAINT [FK_ScheduleSubjectVisit_Visit] FOREIGN KEY ([VisitId]) REFERENCES [dbo].[Visit] ([Id]);


GO
PRINT N'Creating [dbo].[FK_MessageQueue_Template]...';


GO
ALTER TABLE [dbo].[MessageQueue]
    ADD CONSTRAINT [FK_MessageQueue_Template] FOREIGN KEY ([TemplateId]) REFERENCES [dbo].[MessageTemplate] ([Id]);


GO
PRINT N'Creating [dbo].[FK_VisitForms_Form]...';


GO
ALTER TABLE [dbo].[VisitForms]
    ADD CONSTRAINT [FK_VisitForms_Form] FOREIGN KEY ([FormId]) REFERENCES [dbo].[Form] ([Id]);


GO
PRINT N'Creating [dbo].[RefVisit26]...';


GO
ALTER TABLE [dbo].[VisitForms]
    ADD CONSTRAINT [RefVisit26] FOREIGN KEY ([VisitId]) REFERENCES [dbo].[Visit] ([Id]);


GO
PRINT N'Creating [dbo].[FK_MessageTemplate_Language]...';


GO
ALTER TABLE [dbo].[MessageTemplate]
    ADD CONSTRAINT [FK_MessageTemplate_Language] FOREIGN KEY ([LanguageId]) REFERENCES [dbo].[Language] ([Id]);


GO
PRINT N'Creating [dbo].[FK_MessageTemplate_MessageProvider]...';


GO
ALTER TABLE [dbo].[MessageTemplate]
    ADD CONSTRAINT [FK_MessageTemplate_MessageProvider] FOREIGN KEY ([MessageProviderId]) REFERENCES [dbo].[MessageProvider] ([Id]);


GO
PRINT N'Creating [dbo].[FK_VisitStepMapping_Visit]...';


GO
ALTER TABLE [dbo].[VisitStepMapping]
    ADD CONSTRAINT [FK_VisitStepMapping_Visit] FOREIGN KEY ([VisitId]) REFERENCES [dbo].[Visit] ([Id]);


GO
PRINT N'Creating [dbo].[FK_VisitStepMapping_VisitStep]...';


GO
ALTER TABLE [dbo].[VisitStepMapping]
    ADD CONSTRAINT [FK_VisitStepMapping_VisitStep] FOREIGN KEY ([VisitStepId]) REFERENCES [dbo].[VisitStep] ([Id]);


GO
PRINT N'Creating [dbo].[FK_LocaleStringResource_Language]...';


GO
ALTER TABLE [dbo].[LocaleStringResource]
    ADD CONSTRAINT [FK_LocaleStringResource_Language] FOREIGN KEY ([LanguageId]) REFERENCES [dbo].[Language] ([Id]);


GO
PRINT N'Creating [dbo].[FK_VisitStepVisitSequence_Visit]...';


GO
ALTER TABLE [dbo].[VisitStepVisitSequence]
    ADD CONSTRAINT [FK_VisitStepVisitSequence_Visit] FOREIGN KEY ([VisitId]) REFERENCES [dbo].[Visit] ([Id]);


GO
PRINT N'Creating [dbo].[FK_VisitStepVisitSequence_VisitStep]...';


GO
ALTER TABLE [dbo].[VisitStepVisitSequence]
    ADD CONSTRAINT [FK_VisitStepVisitSequence_VisitStep] FOREIGN KEY ([VisitStepId]) REFERENCES [dbo].[VisitStep] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Visit_Arm]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD CONSTRAINT [FK_Visit_Arm] FOREIGN KEY ([ArmId]) REFERENCES [dbo].[Arm] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Visit_ParentVisit]...';


GO
ALTER TABLE [dbo].[Visit]
    ADD CONSTRAINT [FK_Visit_ParentVisit] FOREIGN KEY ([ParentVisitId]) REFERENCES [dbo].[Visit] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Subject_Site]...';


GO
ALTER TABLE [dbo].[Subject]
    ADD CONSTRAINT [FK_Subject_Site] FOREIGN KEY ([SiteId]) REFERENCES [dbo].[Site] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Subject_Contact]...';


GO
ALTER TABLE [dbo].[Subject]
    ADD CONSTRAINT [FK_Subject_Contact] FOREIGN KEY ([ContactId]) REFERENCES [dbo].[Contact] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Subject_StudyId]...';


GO
ALTER TABLE [dbo].[Subject]
    ADD CONSTRAINT [FK_Subject_StudyId] FOREIGN KEY ([StudyId]) REFERENCES [dbo].[Study] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Subject_Gender]...';


GO
ALTER TABLE [dbo].[Subject]
    ADD CONSTRAINT [FK_Subject_Gender] FOREIGN KEY ([GenderTypeId]) REFERENCES [dbo].[GenderType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Question_Form]...';


GO
ALTER TABLE [dbo].[Question]
    ADD CONSTRAINT [FK_Question_Form] FOREIGN KEY ([FormId]) REFERENCES [dbo].[Form] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Question_FieldDataType]...';


GO
ALTER TABLE [dbo].[Question]
    ADD CONSTRAINT [FK_Question_FieldDataType] FOREIGN KEY ([FieldDataTypeId]) REFERENCES [dbo].[CssType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Appointment_Visit]...';


GO
ALTER TABLE [dbo].[Appointment]
    ADD CONSTRAINT [FK_Appointment_Visit] FOREIGN KEY ([VisitId]) REFERENCES [dbo].[Visit] ([Id]);


GO
PRINT N'Creating [dbo].[FK_DrugClass_DrugCategory]...';


GO
ALTER TABLE [dbo].[DrugClass]
    ADD CONSTRAINT [FK_DrugClass_DrugCategory] FOREIGN KEY ([DrugCategoryId]) REFERENCES [dbo].[DrugCategory] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Code_CodeType]...';


GO
ALTER TABLE [dbo].[Code]
    ADD CONSTRAINT [FK_Code_CodeType] FOREIGN KEY ([CodeTypeId]) REFERENCES [dbo].[CodeType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_CountryState_Country]...';


GO
ALTER TABLE [dbo].[CountryState]
    ADD CONSTRAINT [FK_CountryState_Country] FOREIGN KEY ([CountryId]) REFERENCES [dbo].[Country] ([Id]);


GO
PRINT N'Creating [dbo].[FK_CountryState_State]...';


GO
ALTER TABLE [dbo].[CountryState]
    ADD CONSTRAINT [FK_CountryState_State] FOREIGN KEY ([StateId]) REFERENCES [dbo].[State] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ContactEmail_Contact]...';


GO
ALTER TABLE [dbo].[ContactEmail]
    ADD CONSTRAINT [FK_ContactEmail_Contact] FOREIGN KEY ([ContactId]) REFERENCES [dbo].[Contact] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ContactEmail_Email]...';


GO
ALTER TABLE [dbo].[ContactEmail]
    ADD CONSTRAINT [FK_ContactEmail_Email] FOREIGN KEY ([EmailId]) REFERENCES [dbo].[Email] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ContactPhone_Contact]...';


GO
ALTER TABLE [dbo].[ContactPhone]
    ADD CONSTRAINT [FK_ContactPhone_Contact] FOREIGN KEY ([ContactId]) REFERENCES [dbo].[Contact] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ContactPhone_Phone]...';


GO
ALTER TABLE [dbo].[ContactPhone]
    ADD CONSTRAINT [FK_ContactPhone_Phone] FOREIGN KEY ([PhoneId]) REFERENCES [dbo].[Phone] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Phone_PhoneType]...';


GO
ALTER TABLE [dbo].[Phone]
    ADD CONSTRAINT [FK_Phone_PhoneType] FOREIGN KEY ([PhoneTypeId]) REFERENCES [dbo].[PhoneType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ContactAddress_Contact]...';


GO
ALTER TABLE [dbo].[ContactAddress]
    ADD CONSTRAINT [FK_ContactAddress_Contact] FOREIGN KEY ([ContactId]) REFERENCES [dbo].[Contact] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ContactAddress_Address]...';


GO
ALTER TABLE [dbo].[ContactAddress]
    ADD CONSTRAINT [FK_ContactAddress_Address] FOREIGN KEY ([AddressId]) REFERENCES [dbo].[Address] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Address_AddressType]...';


GO
ALTER TABLE [dbo].[Address]
    ADD CONSTRAINT [FK_Address_AddressType] FOREIGN KEY ([AddressTypeId]) REFERENCES [dbo].[AddressType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Contact_ContactType]...';


GO
ALTER TABLE [dbo].[Contact]
    ADD CONSTRAINT [FK_Contact_ContactType] FOREIGN KEY ([ContactTypeId]) REFERENCES [dbo].[ContactType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_StudySite_Study]...';


GO
ALTER TABLE [dbo].[StudySite]
    ADD CONSTRAINT [FK_StudySite_Study] FOREIGN KEY ([StudyId]) REFERENCES [dbo].[Study] ([Id]);


GO
PRINT N'Creating [dbo].[FK_StudySite_Site]...';


GO
ALTER TABLE [dbo].[StudySite]
    ADD CONSTRAINT [FK_StudySite_Site] FOREIGN KEY ([SiteId]) REFERENCES [dbo].[Site] ([Id]);


GO
PRINT N'Creating [dbo].[FK_OrganizationStudy_Organization]...';


GO
ALTER TABLE [dbo].[OrganizationStudy]
    ADD CONSTRAINT [FK_OrganizationStudy_Organization] FOREIGN KEY ([OrganizationId]) REFERENCES [dbo].[Organization] ([Id]);


GO
PRINT N'Creating [dbo].[FK_OrganizationStudy_Study]...';


GO
ALTER TABLE [dbo].[OrganizationStudy]
    ADD CONSTRAINT [FK_OrganizationStudy_Study] FOREIGN KEY ([StudyId]) REFERENCES [dbo].[Study] ([Id]);


GO
PRINT N'Creating [dbo].[FK_StudyFile_Study]...';


GO
ALTER TABLE [dbo].[StudyFile]
    ADD CONSTRAINT [FK_StudyFile_Study] FOREIGN KEY ([StudyId]) REFERENCES [dbo].[Study] ([Id]);


GO
PRINT N'Creating [dbo].[FK_StudyFile_File]...';


GO
ALTER TABLE [dbo].[StudyFile]
    ADD CONSTRAINT [FK_StudyFile_File] FOREIGN KEY ([FileGuid]) REFERENCES [dbo].[File] ([FileGuid]);


GO
PRINT N'Creating [dbo].[FK_SubjectFile_Subject]...';


GO
ALTER TABLE [dbo].[SubjectFile]
    ADD CONSTRAINT [FK_SubjectFile_Subject] FOREIGN KEY ([SubjectId]) REFERENCES [dbo].[Subject] ([Id]);


GO
PRINT N'Creating [dbo].[FK_SubjectFile_File]...';


GO
ALTER TABLE [dbo].[SubjectFile]
    ADD CONSTRAINT [FK_SubjectFile_File] FOREIGN KEY ([FileGuid]) REFERENCES [dbo].[File] ([FileGuid]);


GO
PRINT N'Creating [dbo].[FK_FormVerificationRequest_Form]...';


GO
ALTER TABLE [dbo].[FormVerification]
    ADD CONSTRAINT [FK_FormVerificationRequest_Form] FOREIGN KEY ([FormId]) REFERENCES [dbo].[Form] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AnswerChildQuestion_Answer]...';


GO
ALTER TABLE [dbo].[AnswerChildQuestion]
    ADD CONSTRAINT [FK_AnswerChildQuestion_Answer] FOREIGN KEY ([AnswerId]) REFERENCES [dbo].[Answer] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AnswerChildQuestion_Question]...';


GO
ALTER TABLE [dbo].[AnswerChildQuestion]
    ADD CONSTRAINT [FK_AnswerChildQuestion_Question] FOREIGN KEY ([QuestionId]) REFERENCES [dbo].[Question] ([Id]);


GO
PRINT N'Creating [dbo].[FK_UserSettings_AppUser]...';


GO
ALTER TABLE [dbo].[UserSettings]
    ADD CONSTRAINT [FK_UserSettings_AppUser] FOREIGN KEY ([AppUserId]) REFERENCES [dbo].[AppUser] ([Id]);


GO
PRINT N'Creating [dbo].[FK_StudySetupMap_StudySetupSteps]...';


GO
ALTER TABLE [dbo].[StudySetupMap]
    ADD CONSTRAINT [FK_StudySetupMap_StudySetupSteps] FOREIGN KEY ([StudySetupStepId]) REFERENCES [dbo].[StudySetupSteps] ([Id]);


GO
PRINT N'Creating [Library].[FK_LibraryQuestion_Form]...';


GO
ALTER TABLE [Library].[LibraryQuestion]
    ADD CONSTRAINT [FK_LibraryQuestion_Form] FOREIGN KEY ([LibraryFormId]) REFERENCES [dbo].[Form] ([Id]);


GO
PRINT N'Creating [Library].[FK_LibraryQuestion_FieldDataType]...';


GO
ALTER TABLE [Library].[LibraryQuestion]
    ADD CONSTRAINT [FK_LibraryQuestion_FieldDataType] FOREIGN KEY ([FieldDataTypeId]) REFERENCES [dbo].[CssType] ([Id]);


GO
PRINT N'Creating [Library].[FK_LibraryAnswer_Question]...';


GO
ALTER TABLE [Library].[LibraryAnswer]
    ADD CONSTRAINT [FK_LibraryAnswer_Question] FOREIGN KEY ([QuestionId]) REFERENCES [dbo].[Question] ([Id]);


GO
PRINT N'Creating [dbo].[SubjectDrugChengeHistory_TRG]...';


GO

-- =============================================
-- Author:		Author,,Name>
-- Create date: Create Date,
-- Description:	Description,
-- =============================================
CREATE TRIGGER [dbo].[SubjectDrugChengeHistory_TRG]
   ON  [dbo].[SubjectDrug]
   AFTER DELETE,UPDATE
AS 
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @Record AS TABLE(
		    SubjectDrugId int
           ,SubjectId int
           ,DrugId int
           ,AppointmentId int
           ,StartDate datetime
           ,EndDate datetime
           ,MultipleTrialsId int
           ,DurationUsed int
           ,ReasonStoppedId int
           ,ReasonTypeId int
           ,TreatmentInducedId int
           ,DosageFrequencyId int
           ,IsCurrent bit
           ,IsChanged bit
           ,IsStopped bit
           ,IsBeforeStudy bit
           ,Dosage nvarchar(200)
           ,DosageType nvarchar(200)
           ,Notes nvarchar(1000)
           ,MdNotes nvarchar(max)
           ,Comments nvarchar(max)
           ,Status int
           ,CreatedOn datetime
           ,UpdatedOn datetime
	)
	
	INSERT INTO @Record
	SELECT  
			[Id]
           ,SubjectId
           ,DrugId
           ,AppointmentId
           ,StartDate 
           ,EndDate 
           ,MultipleTrialsId
           ,DurationUsed
           ,ReasonStoppedId
           ,ReasonTypeId
           ,TreatmentInducedId
           ,DosageFrequencyId
           ,IsCurrent 
           ,IsChanged 
           ,IsStopped 
           ,IsBeforeStudy 
           ,Dosage 
           ,DosageType 
           ,Notes 
           ,MdNotes 
           ,Comments 
           ,Status
           ,CreatedOn 
           ,UpdatedOn
	FROM 
			inserted 
	
	INSERT INTO @Record
	SELECT  
			[Id]
           ,SubjectId           
           ,DrugId
           ,AppointmentId
           ,StartDate 
           ,EndDate 
           ,MultipleTrialsId
           ,DurationUsed
           ,ReasonStoppedId
           ,ReasonTypeId
           ,TreatmentInducedId
           ,DosageFrequencyId
           ,IsCurrent 
           ,IsChanged 
           ,IsStopped 
           ,IsBeforeStudy 
           ,Dosage 
           ,DosageType 
           ,Notes 
           ,MdNotes 
           ,Comments 
           ,Status
           ,CreatedOn 
           ,UpdatedOn
	FROM 
			deleted 
	

INSERT INTO [SubjectDrugHistory]
	(		[SubjectDrugId]
           ,[SubjectId]
           ,[DrugId]
           ,[AppointmentId]
           ,[StartDate]
           ,[EndDate]
           ,[MultipleTrialsId]
           ,[DurationUsed]
           ,[ReasonStoppedId]
           ,[ReasonTypeId]
           ,[TreatmentInducedId]
           ,[DosageFrequencyId]
           ,[IsCurrent]
           ,[IsChanged]
           ,[IsStopped]
           ,[IsBeforeStudy]
           ,[Dosage]
           ,[DosageType]
           ,[Notes]
           ,[MdNotes]
           ,[Comments]
           ,[Status]
           ,[CreatedOn]
           ,[UpdatedOn]
           ,[SavedOn]
       )
SELECT 
           SubjectDrugId
           ,SubjectId           
           ,DrugId
           ,AppointmentId
           ,StartDate 
           ,EndDate 
           ,MultipleTrialsId
           ,DurationUsed
           ,ReasonStoppedId
           ,ReasonTypeId
           ,TreatmentInducedId
           ,DosageFrequencyId
           ,IsCurrent 
           ,IsChanged 
           ,IsStopped 
           ,IsBeforeStudy 
           ,Dosage 
           ,DosageType 
           ,Notes 
           ,MdNotes 
           ,Comments 
           ,Status
           ,CreatedOn 
           ,UpdatedOn
           ,GETUTCDATE()
	FROM 
			@Record
END
GO
PRINT N'Creating [dbo].[uspGetSubjectBySiteId]...';


GO

CREATE PROC [dbo].[uspGetSubjectBySiteId] 
    @SiteId int, @StudyId int
AS 
	BEGIN
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	-- SubjectKey must be created previously
	OPEN SYMMETRIC KEY SubjectKey
		DECRYPTION BY CERTIFICATE SubjectCert;

    SELECT
	s.[Id] as [SubjectId], 
	[SiteId], 
	[StudyId], 
	[Directions],
	[Nickname], 
	[FamilyId], 
	[Notes], 
	[NIMHID], 
	[GenderTypeId], 
	[YearBorn], 
	s.[Status], 
	s.[IsActive],
	s.[SortOrder],
	CONVERT(nvarchar, DecryptByKey(FirstNameEnc)) AS [FirstName],	
	CONVERT(nvarchar, DecryptByKey(LastNameEnc))  AS [LastName],
	CONVERT(nvarchar, DecryptByKey(DateOfBirthEnc)) AS [DateOfBirth],
	CONVERT(nvarchar, DecryptByKey(SSNEnc)) AS [SSN],
	NULL AS [FirstNameEnc],		-- no need for encrypted values
	NULL AS [LastNameEnc], 
	NULL AS [DateOfBirthEnc], 
	NULL AS [SSNEnc],
	s.[CreatedOn], 
	s.[UpdatedOn],
	s.[CreatedBy],
	s.[UpdatedBy],
	a.Street,
	a.City,
	a.PostalCode,
	a.StateId,
	a.CountryId,
	a.AddressTypeId,
	p.CountryCode,
	p.AreaCode,
	p.Number,
	p.Telephone,
	p.PhoneTypeId,
	pt.Name as [PhoneType],
	e.[Address] as Email,
	st.Name as [StateName],
	st.Abbr as [StateAbbr],
	country.Name as CountryName

	FROM   [dbo].[Subject] s
	JOIN Contact c on c.Id = s.ContactId
	LEFT JOIN ContactAddress ca on ca.ContactId = c.Id
	LEFT JOIN [Address] a on a.Id = ca.AddressId
	LEFT JOIN ContactPhone cp on cp.ContactId = c.Id
	LEFT JOIN Phone p on p.Id = cp.PhoneId
	LEFT JOIN PhoneType pt on pt.Id = p.PhoneTypeId
	LEFT JOIN ContactEmail ce on ce.ContactId = c.Id
	LEFT JOIN Email e on e.Id = ce.EmailId
	LEFT JOIN [State] st on st.Id = a.StateId
	LEFT JOIN Country country on country.Id = a.CountryId
	WHERE  s.SiteId = @SiteId AND s.StudyId = @StudyId
	ORDER BY FirstName, LastName

	COMMIT
	END
GO
PRINT N'Creating [dbo].[uspSubjectFindByFirstLastName]...';


GO

CREATE PROC [dbo].[uspSubjectFindByFirstLastName] 
    @SiteId int,
	@StudyId int,
    @FirstName nvarchar(100) = NULL,
    @LastName nvarchar(100) = NULL
AS 
	BEGIN
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	-- SubjectKey must be created previously
	OPEN SYMMETRIC KEY SubjectKey
		DECRYPTION BY CERTIFICATE SubjectCert;
	
	SELECT
	s.[Id] as [SubjectId], 
	[SiteId], 
	[StudyId], 
	[Directions],
	[Nickname], 
	[FamilyId], 
	[Notes], 
	[NIMHID], 
	[GenderTypeId], 
	[YearBorn], 
	s.[Status], 
	s.[IsActive],
	s.[SortOrder],
	CONVERT(nvarchar, DecryptByKey(FirstNameEnc)) AS [FirstName],	
	CONVERT(nvarchar, DecryptByKey(LastNameEnc))  AS [LastName],
	CONVERT(nvarchar, DecryptByKey(DateOfBirthEnc)) AS [DateOfBirth],
	CONVERT(nvarchar, DecryptByKey(SSNEnc)) AS [SSN],
	NULL AS [FirstNameEnc],		-- no need for encrypted values
	NULL AS [LastNameEnc], 
	NULL AS [DateOfBirthEnc], 
	NULL AS [SSNEnc],
	s.[CreatedOn], 
	s.[UpdatedOn],
	s.[CreatedBy],
	s.[UpdatedBy],
	a.Street,
	a.City,
	a.PostalCode,
	a.StateId,
	a.CountryId,
	a.AddressTypeId,
	p.CountryCode,
	p.AreaCode,
	p.Number,
	p.Telephone,
	p.PhoneTypeId,
	pt.Name as [PhoneType],
	e.[Address] as Email,
	st.Name as [StateName],
	st.Abbr as [StateAbbr],
	country.Name as CountryName

	FROM   [dbo].[Subject] s
	JOIN Contact c on c.Id = s.ContactId
	LEFT JOIN ContactAddress ca on ca.ContactId = c.Id
	LEFT JOIN [Address] a on a.Id = ca.AddressId
	LEFT JOIN ContactPhone cp on cp.ContactId = c.Id
	LEFT JOIN Phone p on p.Id = cp.PhoneId
	LEFT JOIN PhoneType pt on pt.Id = p.PhoneTypeId
	LEFT JOIN ContactEmail ce on ce.ContactId = c.Id
	LEFT JOIN Email e on e.Id = ce.EmailId
	LEFT JOIN [State] st on st.Id = a.StateId
	LEFT JOIN Country country on country.Id = a.CountryId
	WHERE  (CONVERT(nvarchar, DecryptByKey(FirstNameEnc)) LIKE @FirstName + '%' OR @FirstName IS NULL) 
			AND
		   (CONVERT(nvarchar, DecryptByKey(LastNameEnc)) LIKE @LastName + '%' OR @LastName IS NULL) 
		   AND StudyId = @StudyId
		   AND SiteId = @SiteId
	ORDER BY FirstName, LastName

	COMMIT
	END

/* Unit test

EXEC	[dbo].[uspSubjectFindByFirstLastName]
		@SiteId = 1,
		@FirstName = N'Ivo',
		@LastName = N'Stoyanov'

EXEC	[dbo].[uspSubjectFindByFirstLastName]
		@SiteId = 1,
		@FirstName = N'Ivo'

-- test partial match
EXEC	[dbo].[uspSubjectFindByFirstLastName]
		@SiteId = 1,
		@FirstName = N'I'

EXEC	[dbo].[uspSubjectFindByFirstLastName]
		@SiteId = 1,
		@LastName = N'Stoy'

 */
GO
PRINT N'Creating [dbo].[uspSubjectInsert]...';


GO

CREATE PROC [dbo].[uspSubjectInsert] 
    @SiteId int,
	@StudyId int,
    @Nickname nvarchar(100),
    @FamilyId nvarchar(100),
    @Notes nvarchar(1000),
    @NIMHID nvarchar(100),
    @Gender INT,
    @YearBorn int,
    @Status int,
    @SortOrder int,
	@SSN varchar(20),					-- will be encrypted
	-- cleartext
    @FirstName nvarchar(100),			-- will be encrypted
    @LastName nvarchar(100),			-- will be encrypted
    @DateOfBirth nvarchar(32),			-- will be encrypted
	@ContactTypeId int,
	@Street Nvarchar(250),
	@City nvarchar(100),
	@Zip nvarchar(50),
	@StateId int,
	@CountryId int,
	@CountryCode nvarchar(20),
	@AddressTypeId int,
	@AreaCode int,
	@PhoneNumber int,
	@Telephone nvarchar(50),
	@PhoneTypeId int,
	@EmailAddress nvarchar(200),
	@CreatedBy nvarchar(200)
AS 
  BEGIN
	SET NOCOUNT ON 
	SET XACT_ABORT ON  

    DECLARE @FirstNameEnc varbinary(256),
			@LastNameEnc varbinary(256),
			@DateOfBirthEnc varbinary(256),
			@ContactId int,
			@PhoneId int,
			@AddressId int,
			@EmailId int,
			@SSNEnc varbinary(500)

	-- SubjectKey must be created previously
	OPEN SYMMETRIC KEY SubjectKey
		DECRYPTION BY CERTIFICATE SubjectCert;

	SET @FirstNameEnc   = EncryptByKey(Key_GUID('SubjectKey'), @FirstName)
	SET @LastNameEnc    = EncryptByKey(Key_GUID('SubjectKey'), @LastName)
	SET @DateOfBirthEnc = EncryptByKey(Key_GUID('SubjectKey'), @DateOfBirth)
	SET @SSNEnc			= EncryptByKey(Key_GUID('SubjectKey'), @SSN)
	
	BEGIN TRAN

		INSERT INTO [dbo].[Contact]
		(		
			ContactTypeId,
			IsActive,
			CreatedBy,
			CreatedOn
		)
		SELECT 
			@ContactTypeId,
			1,
			@CreatedBy,
			GETUTCDATE()
		
		SELECT @ContactId = SCOPE_IDENTITY()

		IF @PhoneNumber > 0 OR LEN(@Telephone)>0
		BEGIN
			INSERT INTO [Phone]
				(					
					AreaCode,
					CountryCode,
					Number,
					PhoneTypeId,
					Telephone,
					Status,
					IsActive,
					CreatedBy,
					CreatedOn								
				)
				SELECT
					@AreaCode,
					@CountryCode,
					@PhoneNumber,
					@PhoneTypeId,
					@Telephone,
					1,
					1,
					@CreatedBy,
					GETUTCDATE()

			SELECT @PhoneId = SCOPE_IDENTITY()

			INSERT INTO [ContactPhone]
					(
						ContactId,
						PhoneId
					)
				SELECT
					@ContactId,
					@PhoneId					
		END

		IF LEN(@Street)>0 OR LEN(@City)>0 OR LEN(@Zip)>0 OR @StateId>0 OR @CountryId>0
		BEGIN
			INSERT INTO [Address]
					(
						AddressTypeId,
						Street,
						City,
						PostalCode,
						StateId,
						CountryId,
						IsActive,
						Status,
						CreatedBy,
						CreatedOn
					)
					SELECT
						@AddressTypeId,
						@Street,
						@City,
						@Zip,
						@StateId,
						@CountryId,
						1,
						1,
						@CreatedBy,
						GETUTCDATE()

			SELECT @AddressId = SCOPE_IDENTITY()

			INSERT INTO [ContactAddress]
					(
						AddressId,
						ContactId
					)
					SELECT
						@AddressId,
						@ContactId
		END 

		IF LEN(@EmailAddress)>0
		BEGIN
			INSERT INTO Email
				(
					Address,
					IsActive,
					Status,
					CreatedBy,
					CreatedOn
				)
				SELECT
					@EmailAddress,
					1,
					1,
					@CreatedBy,
					GETUTCDATE()

			SELECT @EmailId = SCOPE_IDENTITY()

			INSERT INTO [ContactEmail]
					(
						ContactId,
						EmailId
					)
					SELECT
						@ContactId,
						@EmailId					
		END

	   INSERT INTO [dbo].[Subject] 
			(
				[ContactId],
				[SiteId], 
				[StudyId],  
				[Nickname], 
				[FamilyId], 
				[Notes], 
				[NIMHID], 
				[GenderTypeId], 
				[YearBorn], 
				[Status], 
				[SortOrder], 
				[FirstNameEnc], 
				[LastNameEnc], 
				[DateOfBirthEnc], 
				[CreatedBy],
				[CreatedOn],
				[SSNEnc]
			)

			SELECT	
				@ContactId,
				@SiteId, 
				@StudyId,  
				@Nickname, 
				@FamilyId, 
				@Notes, 
				@NIMHID, 
				@Gender, 
				@YearBorn, 
				@Status, 
				@SortOrder, 
				@FirstNameEnc, 
				@LastNameEnc, 
				@DateOfBirthEnc, 
				@CreatedBy,
				GETUTCDATE(),
				@SSNEnc
	COMMIT
	SELECT SCOPE_IDENTITY()
 END

/* Unit test

EXEC	[dbo].[uspSubjectInsert]
		@SiteId = 1,
		@Nickname = N'ivo',
		@FamilyId = NULL,
		@Notes = NULL,
		@NIMHID = NULL,
		@Gender = N'M',
		@YearBorn = 1970,
		@Status = 1,
		@SortOrder = 1,
		@FirstName = N'Ivo',
		@LastName = N'Stoyanov',
		@DateOfBirth = N'19701231'

SELECT * FROM dbo.Subject
 */
GO
PRINT N'Creating [dbo].[uspSubjectUpdate]...';


GO

CREATE PROC [dbo].[uspSubjectUpdate] 
    @SubjectId int,
    @SiteId int,
    @Nickname nvarchar(100),
    @FamilyId nvarchar(100),
    @Notes nvarchar(1000),
    @NIMHID nvarchar(100),
    @Gender int,
    @YearBorn int,
    @Status int,
    @SortOrder int,
	@SSN nvarchar(20),
	-- cleartext
    @FirstName nvarchar(100),		-- will be encrypted
    @LastName nvarchar(100),			-- will be encrypted
    @DateOfBirth nvarchar(32)			-- will be encrypted
AS 
  BEGIN

	SET NOCOUNT ON 
	SET XACT_ABORT ON  

    DECLARE @FirstNameEnc varbinary(256),
			@LastNameEnc varbinary(256),
			@DateOfBirthEnc varbinary(256),
			@SSNEnc varbinary(256)


	-- SubjectKey must be created previously
	OPEN SYMMETRIC KEY SubjectKey
		DECRYPTION BY CERTIFICATE SubjectCert;

	SET @FirstNameEnc   = EncryptByKey(Key_GUID('SubjectKey'), @FirstName)
	SET @LastNameEnc    = EncryptByKey(Key_GUID('SubjectKey'), @LastName)
	SET @DateOfBirthEnc = EncryptByKey(Key_GUID('SubjectKey'), @DateOfBirth)
	SET @SSNEnc = EncryptByKey(Key_GUID('SubjectKey'), @SSN)

	BEGIN TRAN

		UPDATE  [dbo].[Subject]
		   SET	[SiteId] = @SiteId, 
				[Nickname] = @Nickname, 
				[FamilyId] = @FamilyId, 
				[Notes] = @Notes, 
				[NIMHID] = @NIMHID, 
				[GenderTypeId] = @Gender, 
				[YearBorn] = @YearBorn, 
				[Status] = @Status, 
				[SortOrder] = @SortOrder, 
				[FirstNameEnc] = @FirstNameEnc, 
				[LastNameEnc] = @LastNameEnc, 
				[DateOfBirthEnc] = @DateOfBirthEnc, 
				[UpdatedOn] = GETUTCDATE(),
				[SSNEnc] = @SSNEnc
		WHERE   [Id] = @SubjectId
	
	COMMIT TRAN

	SELECT @SubjectId
 END

/* Unit test

EXEC	[dbo].[uspSubjectUpdate]
		@SubjectId = 2010,
		@SiteId = 1,
		@Nickname = N'ivo',
		@FamilyId = NULL,
		@Notes = NULL,
		@NIMHID = NULL,
		@Gender = N'M',
		@YearBorn = 1992,
		@Status = 1,
		@SortOrder = 1,
		@FirstName = N'Victor',
		@LastName = N'Stoyanoff',
		@DateOfBirth = N'19920716',

EXEC	[dbo].[uspSubjectFindByFirstLastName]
		@SiteId = 1,
		@LastName = N'Stoy'
 */
GO
PRINT N'Creating [dbo].[uspGetSubjectById]...';


GO

CREATE PROC [dbo].[uspGetSubjectById] 
    @SubjectId int
AS 
	BEGIN
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	-- SubjectKey must be created previously
	OPEN SYMMETRIC KEY SubjectKey
		DECRYPTION BY CERTIFICATE SubjectCert;

	SELECT 
	s.[Id] as [SubjectId], 
	[SiteId], 
	[StudyId], 
	[Directions],
	[Nickname], 
	[FamilyId], 
	[Notes], 
	[NIMHID], 
	[GenderTypeId], 
	[YearBorn], 
	s.[Status], 
	s.[IsActive],
	s.[SortOrder],
	CONVERT(nvarchar, DecryptByKey(FirstNameEnc)) AS [FirstName],	
	CONVERT(nvarchar, DecryptByKey(LastNameEnc))  AS [LastName],
	CONVERT(nvarchar, DecryptByKey(DateOfBirthEnc)) AS [DateOfBirth],
	CONVERT(nvarchar, DecryptByKey(SSNEnc)) AS [SSN],
	NULL AS [FirstNameEnc],		-- no need for encrypted values
	NULL AS [LastNameEnc], 
	NULL AS [DateOfBirthEnc], 
	NULL AS [SSNEnc],
	s.[CreatedOn], 
	s.[UpdatedOn],
	s.[CreatedBy],
	s.[UpdatedBy],
	a.Street,
	a.City,
	a.PostalCode,
	a.StateId,
	a.CountryId,
	a.AddressTypeId,
	p.CountryCode,
	p.AreaCode,
	p.Number,
	p.Telephone,
	p.PhoneTypeId,
	pt.Name as [PhoneType],
	e.[Address] as Email,
	st.Name as [StateName],
	st.Abbr as [StateAbbr],
	country.Name as CountryName

	FROM   [dbo].[Subject] s
	JOIN Contact c on c.Id = s.ContactId
	LEFT JOIN ContactAddress ca on ca.ContactId = c.Id
	LEFT JOIN [Address] a on a.Id = ca.AddressId
	LEFT JOIN ContactPhone cp on cp.ContactId = c.Id
	LEFT JOIN Phone p on p.Id = cp.PhoneId
	LEFT JOIN PhoneType pt on pt.Id = p.PhoneTypeId
	LEFT JOIN ContactEmail ce on ce.ContactId = c.Id
	LEFT JOIN Email e on e.Id = ce.EmailId
	LEFT JOIN [State] st on st.Id = a.StateId
	LEFT JOIN Country country on country.Id = a.CountryId
	
	WHERE  s.Id = @SubjectId
	ORDER BY FirstName, LastName

	COMMIT
	END
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3dd6a23f-e659-4a06-a6f8-b23616095df2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3dd6a23f-e659-4a06-a6f8-b23616095df2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4314f8fc-1541-4b18-abce-d55fa6fb46dd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4314f8fc-1541-4b18-abce-d55fa6fb46dd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5dd3a518-03f6-43d8-8e4f-af35c8277190')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5dd3a518-03f6-43d8-8e4f-af35c8277190')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fd16152f-2ecd-4920-8465-61fc0fc53d90')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fd16152f-2ecd-4920-8465-61fc0fc53d90')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6f857454-84ee-40c8-899a-3dac1634fd6e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6f857454-84ee-40c8-899a-3dac1634fd6e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5f656a9e-bc57-4f5a-8921-61a944924285')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5f656a9e-bc57-4f5a-8921-61a944924285')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5f94fdcb-3c39-48de-95eb-c22c30c91787')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5f94fdcb-3c39-48de-95eb-c22c30c91787')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2d005103-106d-4819-bf5a-66d8c0457b77')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2d005103-106d-4819-bf5a-66d8c0457b77')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '09c1e1a2-1537-4455-b6e9-80a787d314d5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('09c1e1a2-1537-4455-b6e9-80a787d314d5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c5a5a1b2-62ac-49dd-a68e-fc3cb3384b56')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c5a5a1b2-62ac-49dd-a68e-fc3cb3384b56')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4459087f-9c56-4539-be20-509e296fbb65')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4459087f-9c56-4539-be20-509e296fbb65')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '14d0b0d7-71e0-4c21-be0b-51e3b24f5cb8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('14d0b0d7-71e0-4c21-be0b-51e3b24f5cb8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '66c3702e-30b4-4af3-afa2-f5ab300b06ec')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('66c3702e-30b4-4af3-afa2-f5ab300b06ec')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '89c56773-043b-42c0-b7ef-a3a295625e10')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('89c56773-043b-42c0-b7ef-a3a295625e10')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b4b267a6-6901-4c8b-b8f8-56c9f7f6a6a3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b4b267a6-6901-4c8b-b8f8-56c9f7f6a6a3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '521f12b3-6e92-4691-8dd5-b283e5f4caeb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('521f12b3-6e92-4691-8dd5-b283e5f4caeb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'db122179-2fde-4eef-9a47-038914d20764')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('db122179-2fde-4eef-9a47-038914d20764')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3f9db458-2228-4d36-a257-b67d8e262fff')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3f9db458-2228-4d36-a257-b67d8e262fff')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '995d96e1-8dc6-476f-95f7-05c34b03ff01')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('995d96e1-8dc6-476f-95f7-05c34b03ff01')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4e937a78-9448-4b7f-8df5-131832326a8c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4e937a78-9448-4b7f-8df5-131832326a8c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e50a60aa-8b77-41e2-a98c-fc4e10e40ab6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e50a60aa-8b77-41e2-a98c-fc4e10e40ab6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd0d1a0c5-3f07-4af0-b66f-3f7bb5db647f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d0d1a0c5-3f07-4af0-b66f-3f7bb5db647f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '14b282e2-79f9-4053-8312-170736e20c94')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('14b282e2-79f9-4053-8312-170736e20c94')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dcd68fdf-92c9-4162-b215-97eb262e766e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dcd68fdf-92c9-4162-b215-97eb262e766e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2f898d7a-7636-4cb1-acae-8ad95a8b8924')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2f898d7a-7636-4cb1-acae-8ad95a8b8924')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '08f135ae-bbe0-458b-a037-deaf06d7b702')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('08f135ae-bbe0-458b-a037-deaf06d7b702')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '862bad11-69b2-43f3-89f3-5cd6cdac9c16')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('862bad11-69b2-43f3-89f3-5cd6cdac9c16')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6079f996-47a0-4781-bc04-19c12548dbc5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6079f996-47a0-4781-bc04-19c12548dbc5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '479a9733-e293-4561-9c86-4b246f0a3e64')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('479a9733-e293-4561-9c86-4b246f0a3e64')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd02b242a-64e7-4a4d-b82a-be08fd99f83e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d02b242a-64e7-4a4d-b82a-be08fd99f83e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1c96d455-b475-4597-b9ed-0623b4a93a37')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1c96d455-b475-4597-b9ed-0623b4a93a37')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '028d5ebd-925c-4271-a36b-465e24405b51')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('028d5ebd-925c-4271-a36b-465e24405b51')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5421ea4e-1854-4304-bdf5-717a0879b32b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5421ea4e-1854-4304-bdf5-717a0879b32b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9297c54f-5e11-4c9c-a33d-b583cd28244f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9297c54f-5e11-4c9c-a33d-b583cd28244f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4230210c-63ef-4fde-bf23-5c4aa1c4436b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4230210c-63ef-4fde-bf23-5c4aa1c4436b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2af76fe9-e314-4703-bbf7-1c8ea30e5215')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2af76fe9-e314-4703-bbf7-1c8ea30e5215')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd2f2dbe4-8076-4dd1-986f-a080aae66c90')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d2f2dbe4-8076-4dd1-986f-a080aae66c90')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fe9c6d0c-a8cd-43b4-a574-11957e866339')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fe9c6d0c-a8cd-43b4-a574-11957e866339')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9aa6195c-a40b-4f3c-a849-b8d300adffcc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9aa6195c-a40b-4f3c-a849-b8d300adffcc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6f75e3e2-ab10-4f31-a8c2-a1e5ba22737d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6f75e3e2-ab10-4f31-a8c2-a1e5ba22737d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8ba3120f-51bc-4f48-ab0e-9d1db5deae64')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8ba3120f-51bc-4f48-ab0e-9d1db5deae64')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a95f1420-a5b9-4da0-bcd8-8361bf142dbc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a95f1420-a5b9-4da0-bcd8-8361bf142dbc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '524541f2-6919-47c9-822e-59c55785dc9c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('524541f2-6919-47c9-822e-59c55785dc9c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '40e9c69c-1322-40af-98d0-ac6fcd771340')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('40e9c69c-1322-40af-98d0-ac6fcd771340')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1e1c1c63-3d4f-4c41-a6e2-7e50fa173c42')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1e1c1c63-3d4f-4c41-a6e2-7e50fa173c42')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '85130570-0da2-4d59-a630-a00d9ca90b9d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('85130570-0da2-4d59-a630-a00d9ca90b9d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'eeb1220b-c6f6-4faf-bd57-e9a42e1a732f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('eeb1220b-c6f6-4faf-bd57-e9a42e1a732f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f1648f6c-d7ec-4c80-a63b-7049faf7332e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f1648f6c-d7ec-4c80-a63b-7049faf7332e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e8f13393-813d-449a-ac3a-a6a1ed16645e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e8f13393-813d-449a-ac3a-a6a1ed16645e')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
--r: .\TypeTables1.sql
--r: .\StartDefaultValues2.sql
--r: .\DataInserts3.sql
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.';


GO
