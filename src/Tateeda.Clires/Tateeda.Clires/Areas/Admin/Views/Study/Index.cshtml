@using System.Web.Optimization
@model Tateeda.Clires.Areas.Admin.Model.Study.StudyViewModel
@{
	ViewBag.Title = "Study Administration";
	Layout = string.IsNullOrWhiteSpace(ViewBag.Layout) ? "~/Views/Shared/_Layout.cshtml" : ViewBag.Layout;
}
@section scripts{
	@Scripts.Render("~/Scripts/app/Admin/Study/study.js")
}
<div class="site-title">Study Management</div>
<div class="container">
	<div class="modal hide fade in" style="display: none; top: 40%;" id="newstudy-modal">
		<div class="modal-header">
			<a class="close" data-dismiss="modal" style="width: 10px; height: 10px;" aria-hidden="true">&nbsp;X&nbsp;</a>
			<h3>Study</h3>
		</div>
		<div class="modal-body model-border">
			@using (@Ajax.BeginForm("NewStudy", null, new AjaxOptions { HttpMethod = "POST", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @class = "form-horizontal", id = "frm" }))
			{
				<!-- ko with: study.vm.studyitem() -->
				@Html.HiddenFor(m => m.Id, new Dictionary<string, object> { { "data-bind", "value: Id" } })


				<div class="control-group">
					<label class="control-label" for="Name">Study Name:<span class="required">*</span></label>
					<div class="controls">
						@Html.TextBoxFor(m => m.Name, new Dictionary<string, object> { { "class", "input-xlarge" }, { "placeholder", "Study name" }, { "required", "required" }, { "data-bind", "value: Name" } })
					</div>
					<br />
					<label class="control-label" for="Description">Description:</label>
					<div class="controls">
						@Html.TextAreaFor(m => m.Description, new Dictionary<string, object> { { "class", "input-xlarge" }, { "placeholder", "Study Description" }, { "required", "required" }, { "data-bind", "value: Description" } })
					</div>
					<br />
					<label class="control-label" for="Target">Study Targets:</label>
					<div class="controls">
						@Html.TextAreaFor(m => m.Target, new Dictionary<string, object> { { "class", "input-xlarge" }, { "placeholder", "Study Target" }, { "data-bind", "value: Target" } })
					</div>
					<br />
					<label class="control-label" for="Goal">Study Goals:</label>
					<div class="controls">
						@Html.TextAreaFor(m => m.Goal, new Dictionary<string, object> { { "class", "input-xlarge" }, { "placeholder", "Study Goal" }, { "data-bind", "value: Goal" } })
					</div>
					<br />
					<label class="control-label" for="Budget">Study Budget:</label>
					<div class="controls">
						@Html.TextBoxFor(m => m.Budget, new Dictionary<string, object> { { "class", "input-small" }, { "placeholder", "Study Budget" }, { "required", "required" }, { "data-bind", "value: Budget" } })
					</div>
					<br />
					<label class="control-label" for="StartDate">Start Date:<span class="required">*</span></label>
					<div class="controls">
						@Html.TextBoxFor(m => m.StartDate, new Dictionary<string, object> { { "class", "input-xlarge date" }, { "placeholder", "mm/dd/yyyy" }, { "required", "required" }, { "data-bind", "value: StartDate" }, { "type", "date" }, })
					</div>
					<br />
					<label class="control-label" for="EndDate">Target End Date:</label>
					<div class="controls">                        
						@Html.TextBoxFor(m => m.EndDate, new Dictionary<string, object> { { "class", "input-xlarge date" }, { "placeholder", "mm/dd/yyyy" }, { "data-bind", "value: EndDate" }, { "type", "date" }, })
					</div>
					<br />
					<label class="control-label" for="IsActive">Is Active:<span class="required">*</span></label>
					<div class="controls">
						@Html.CheckBoxFor(m => m.IsActive, new Dictionary<string, object> { { "data-bind", "checked: IsActive" } })
					</div>
					<br />
					<hr />
				</div> 
				<!-- /ko -->
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
					<input type="submit" class="btn btn-primary" value="Save" />
				</div>
			   
			}
		</div>
	</div>

	<div class="row-fluid">
		<div class="span2">
			<a href="#newstudy-modal" data-toggle="modal" class="btn btn-primary" id="modellink">New Study</a>
		</div>
	</div>
	<br/>
	<div class='cliresGrid'>
		<div data-bind='simpleGrid: study.vm.gridViewModel'></div>
	</div>            ​
</div>

