@using System.Web.Optimization
@using Tateeda.Clires.Utility
@model Tateeda.Clires.Areas.Admin.Model.Study.ArmViewModel
@{
	ViewBag.Title = "Study Arms";
	Layout = string.IsNullOrWhiteSpace(this.ViewBag.Layout) ? "~/Views/Shared/_Layout.cshtml" : this.ViewBag.Layout;
	var enumHelper = new EnumerationHelper();
}

@section scripts
{
	@Scripts.Render("~/Scripts/app/Admin/Study/arms.js")

	<script type="text/javascript">
		studyArms.vm.defaultStudyId = Number('@(ViewBag.DefaultStudyId)');
		studyArms.vm.loaddefault();
	</script>
}
<div class="site-title">Study Arms</div>

<div class="modal hide fade in" style="display: none; top: 40%;" id="newarm-modal">
	<div class="modal-header">
		<a class="close" data-dismiss="modal" style="width: 10px; height: 10px;" aria-hidden="true">&nbsp;X&nbsp;</a>
		<h3>Study Arm</h3>
	</div>
	<div class="modal-body model-border">
		@using (@Ajax.BeginForm("NewArm", null, new AjaxOptions { HttpMethod = "POST", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @class = "form-horizontal", id = "frm" }))
  {
			<!-- ko with: studyArms.vm.arm() -->
			@Html.HiddenFor(m => m.Id, new Dictionary<string, object> { { "data-bind", "value: Id" } })

			<div class="control-group">
				<label class="control-label" for="Name">Study Name:<span class="required">*</span></label>
				<div class="controls">
					@Html.TextBoxFor(m => m.Name,
							new Dictionary<string, object>
                                {
                                    { "class", "input-xlarge" }, 
                                    { "placeholder", "Arm name" }, 
                                    { "required", "required" }, 
                                    { "data-bind", "value: Name" }
                                })
				</div>
				<br />

				<label class="control-label" for="StudyId">Study:<span class="required">*</span></label>
				<div class="controls">
					@Html.DropDownList("StudyId", enumHelper.GetStudies(true),
							new Dictionary<string, object>
                                {
                                    { "class", "input-xlarge" }, 
                                    { "placeholder", "Arm name" }, 
                                    { "required", "required" }, 
                                    { "data-bind", "value: StudyId" }
                                })
				</div>
				<br />

				<label class="control-label" for="Description">Code:</label>
				<div class="controls">
					@Html.TextBoxFor(m => m.Code,
							new Dictionary<string, object>
                                {
                                    { "class", "input-xlarge" }, 
                                    { "placeholder", "Code" },
                                    { "data-bind", "value: Code" }
                                })
				</div>

				<br />
				<label class="control-label" for="Description">Description:</label>
				<div class="controls">
					@Html.TextAreaFor(m => m.Description,
							new Dictionary<string, object>
                                {
                                    { "class", "input-xlarge" }, 
                                    { "placeholder", "Arm Description" }, 
                                    { "data-bind", "value: Description" }
                                })
				</div>

				<br />
				<label class="control-label" for="IsActive">Is Active:<span class="required">*</span></label>
				<div class="controls">
					@Html.CheckBoxFor(m => m.IsActive, new Dictionary<string, object> { { "data-bind", "checked: IsActive" } })
				</div>
				<br />
				<hr />
			</div> 
			<!-- /ko -->
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
				<input type="submit" class="btn btn-primary" value="Save" />
			</div>
  }
	</div>
</div>

<div class="row-fluid">
	<div class="span2">
		<a href="#newarm-modal" data-toggle="modal" class="btn btn-primary" id="modellink">New Study Arm</a>
	</div>
	<div class="span4">
		@Html.DropDownList("StudyId", enumHelper.GetStudies(true), 
								new Dictionary<string, object>
                                {
                                    { "class", "input-xlarge" }, 
                                    { "placeholder", "Select Study" }, 
                                    { "data-bind", "value: studyArms.vm.defaultStudyId" }
								})
	</div>
	<div class="span3">
		<div class='loadingIndicator'><i class="icon-refresh">&nbsp;</i> Loading...</div>
	</div>
</div>
<br />

<div class='cliresGrid studygrid'>
	<div data-bind='simpleGrid: studyArms.vm.gridViewModel'></div>
</div>

